./6.js:2: WARNING - assignment to property scope of $jscomp
found   : {}
required: {}
$jscomp.scope = {};
^^^^^^^^^^^^^^^^^^

./6.js:2: WARNING - constant property scope assigned a value more than once
$jscomp.scope = {};
^^^^^^^^^^^^^

./6.js:6: WARNING - constant property global assigned a value more than once
$jscomp.global = $jscomp.getGlobal(this);
^^^^^^^^^^^^^^

./6.js:18: WARNING - constant property USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS assigned a value more than once
$jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS = false;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:19: WARNING - constant property ES6_CONFORMANCE assigned a value more than once
$jscomp.ES6_CONFORMANCE = $jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS && $jscomp.checkEs6ConformanceViaProxy();
^^^^^^^^^^^^^^^^^^^^^^^

./6.js:31: WARNING - inconsistent return type
found   : {next: function(): IIterableResult<?>}
required: Iterator<T>
  return {next:$jscomp.arrayIteratorImpl(array)};
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:33: WARNING - constant property ASSUME_ES5 assigned a value more than once
$jscomp.ASSUME_ES5 = false;
^^^^^^^^^^^^^^^^^^

./6.js:34: WARNING - constant property ASSUME_NO_NATIVE_MAP assigned a value more than once
$jscomp.ASSUME_NO_NATIVE_MAP = false;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:35: WARNING - constant property ASSUME_NO_NATIVE_SET assigned a value more than once
$jscomp.ASSUME_NO_NATIVE_SET = false;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:36: WARNING - constant property SIMPLE_FROUND_POLYFILL assigned a value more than once
$jscomp.SIMPLE_FROUND_POLYFILL = false;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:44: WARNING - constant property SYMBOL_PREFIX assigned a value more than once
$jscomp.SYMBOL_PREFIX = "jscomp_symbol_";
^^^^^^^^^^^^^^^^^^^^^

./6.js:53: WARNING - dangerous use of the global this object
  this.$jscomp$symbol$id_ = id;
  ^^^^

./6.js:54: WARNING - Suspicious code. The result of the 'getprop' operator is not being used.
  this.description;
  ^^^^^^^^^^^^^^^^

./6.js:54: WARNING - dangerous use of the global this object
  this.description;
  ^^^^

./6.js:58: WARNING - Access to private property $jscomp$symbol$id_ of $jscomp.SymbolClass not allowed here.
  return this.$jscomp$symbol$id_;
         ^^^^^^^^^^^^^^^^^^^^^^^

./6.js:99: WARNING - inconsistent return type
found   : {next: function(this:Iterator<T>): T}
required: IteratorIterable<T>
  return iterator;
         ^^^^^^^^

./6.js:103: WARNING - actual parameter 1 of $jscomp.arrayIterator does not match formal parameter
found   : (Arguments<T>|Iterable<T>|Iterator<T>|string)
required: Array<?>
  return iteratorFunction ? iteratorFunction.call(iterable) : $jscomp.arrayIterator(iterable);
                                                                                    ^^^^^^^^

./6.js:137: WARNING - cannot instantiate non-constructor
      var map = new NativeWeakMap([[x, 2], [y, 3]]);
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:162: WARNING - cannot instantiate non-constructor
      var obj = new WeakMapMembership;
                ^^^^^^^^^^^^^^^^^^^^^

./6.js:217: WARNING - Suspicious code. The result of the 'getprop' operator is not being used.
  this.previous;
  ^^^^^^^^^^^^^

./6.js:217: WARNING - dangerous use of the global this object
  this.previous;
  ^^^^

./6.js:218: WARNING - Suspicious code. The result of the 'getprop' operator is not being used.
  this.next;
  ^^^^^^^^^

./6.js:218: WARNING - dangerous use of the global this object
  this.next;
  ^^^^

./6.js:219: WARNING - Suspicious code. The result of the 'getprop' operator is not being used.
  this.head;
  ^^^^^^^^^

./6.js:219: WARNING - dangerous use of the global this object
  this.head;
  ^^^^

./6.js:220: WARNING - Suspicious code. The result of the 'getprop' operator is not being used.
  this.key;
  ^^^^^^^^

./6.js:220: WARNING - dangerous use of the global this object
  this.key;
  ^^^^

./6.js:221: WARNING - Suspicious code. The result of the 'getprop' operator is not being used.
  this.value;
  ^^^^^^^^^^

./6.js:221: WARNING - dangerous use of the global this object
  this.value;
  ^^^^

./6.js:225: WARNING - Property entries never defined on Function.prototype
    if ($jscomp.ASSUME_NO_NATIVE_MAP || !NativeMap || typeof NativeMap != "function" || !NativeMap.prototype.entries || typeof Object.seal != "function") {
                                                                                                             ^^^^^^^

./6.js:393: WARNING - Property entries never defined on Function.prototype
    if ($jscomp.ASSUME_NO_NATIVE_SET || !NativeSet || typeof NativeSet != "function" || !NativeSet.prototype.entries || typeof Object.seal != "function") {
                                                                                                             ^^^^^^^

./6.js:583: WARNING - cannot instantiate non-constructor
        var callbackEntry = new CallbackEntry(requireSet, callback);
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:599: WARNING - Function createRequire: called with 0 argument(s). Function requires at least 1 argument(s) and no more than 1 argument(s).
  $jscomp.require = createRequire();
                    ^^^^^^^^^^^^^^^

./6.js:611: WARNING - Function callRequireCallback: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
          callRequireCallback(entry.callback);
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:615: WARNING - Cannot do '[]' access on a struct
        ensureMap["delete"](absModulePath);
                  ^^^^^^^^

./6.js:636: WARNING - Cannot do '[]' access on a struct
    blockingDeps["delete"](absModulePath);
                 ^^^^^^^^

./6.js:637: WARNING - cannot instantiate non-constructor
    var cacheEntry = new CacheEntry(moduleDef, new Module(absModulePath), absModulePath);
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:637: WARNING - cannot instantiate non-constructor
    var cacheEntry = new CacheEntry(moduleDef, new Module(absModulePath), absModulePath);
                                               ^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:676: WARNING - Cannot do '[]' access on a struct
      blockingModulePathToBlockedModules["delete"](cacheEntry.module.id);
                                         ^^^^^^^^

./6.js:699: WARNING - cannot instantiate non-constructor
    var entry = new CacheEntry(null, new Module(absModulePath, exports), absModulePath);
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:699: WARNING - cannot instantiate non-constructor
    var entry = new CacheEntry(null, new Module(absModulePath, exports), absModulePath);
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:739: WARNING - declaration of multiple variables with shared type information
  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:752: WARNING - declaration of multiple variables with shared type information
  var CLONE_DEEP_FLAG = 1,
  ^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:757: WARNING - declaration of multiple variables with shared type information
  var COMPARE_PARTIAL_FLAG = 1,
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:761: WARNING - declaration of multiple variables with shared type information
  var WRAP_BIND_FLAG = 1,
  ^^^^^^^^^^^^^^^^^^^^^^^

./6.js:773: WARNING - declaration of multiple variables with shared type information
  var DEFAULT_TRUNC_LENGTH = 30,
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:777: WARNING - declaration of multiple variables with shared type information
  var HOT_COUNT = 800,
  ^^^^^^^^^^^^^^^^^^^^

./6.js:781: WARNING - declaration of multiple variables with shared type information
  var LAZY_FILTER_FLAG = 1,
  ^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:786: WARNING - declaration of multiple variables with shared type information
  var INFINITY = 1 / 0,
  ^^^^^^^^^^^^^^^^^^^^^

./6.js:792: WARNING - declaration of multiple variables with shared type information
  var MAX_ARRAY_LENGTH = 4294967295,
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:810: WARNING - declaration of multiple variables with shared type information
  var argsTag = '[object Arguments]',
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:846: WARNING - declaration of multiple variables with shared type information
  var reEmptyStringLeading = /\b__p \+= '';/g,
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:851: WARNING - declaration of multiple variables with shared type information
  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:857: WARNING - declaration of multiple variables with shared type information
  var reEscape = /<%-([\s\S]+?)%>/g,
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:862: WARNING - declaration of multiple variables with shared type information
  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:870: WARNING - declaration of multiple variables with shared type information
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:874: WARNING - declaration of multiple variables with shared type information
  var reTrim = /^\s+|\s+$/g,
  ^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:879: WARNING - declaration of multiple variables with shared type information
  var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:923: WARNING - declaration of multiple variables with shared type information
  var rsAstralRange = '\\ud800-\\udfff',
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:939: WARNING - declaration of multiple variables with shared type information
  var rsApos = "['\u2019]",
  ^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:956: WARNING - declaration of multiple variables with shared type information
  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:1130: WARNING - declaration of multiple variables with shared type information
  var freeParseFloat = parseFloat,
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:1209: WARNING - optional arguments must be at the end
  function arrayAggregator(array, setter, iteratee, accumulator) {
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:1229: WARNING - optional arguments must be at the end
  function arrayEach(array, iteratee) {
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:1238: WARNING - inconsistent return type
found   : (Array|null|undefined)
required: (Array|null)
    return array;
           ^^^^^

./6.js:1250: WARNING - optional arguments must be at the end
  function arrayEachRight(array, iteratee) {
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:1258: WARNING - inconsistent return type
found   : (Array|null|undefined)
required: (Array|null)
    return array;
           ^^^^^

./6.js:1271: WARNING - optional arguments must be at the end
  function arrayEvery(array, predicate) {
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:1292: WARNING - optional arguments must be at the end
  function arrayFilter(array, predicate) {
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:1316: WARNING - optional arguments must be at the end
  function arrayIncludes(array, value) {
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:1316: WARNING - parameter target does not appear in arrayIncludes's parameter list
  function arrayIncludes(array, value) {
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:1318: WARNING - actual parameter 1 of baseIndexOf does not match formal parameter
found   : (Array|null|undefined)
required: (Array|null)
    return !!length && baseIndexOf(array, value, 0) > -1;
                                   ^^^^^

./6.js:1330: WARNING - optional arguments must be at the end
  function arrayIncludesWith(array, value, comparator) {
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:1330: WARNING - parameter target does not appear in arrayIncludesWith's parameter list
  function arrayIncludesWith(array, value, comparator) {
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:1351: WARNING - optional arguments must be at the end
  function arrayMap(array, iteratee) {
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:1393: WARNING - optional arguments must be at the end
  function arrayReduce(array, iteratee, accumulator, initAccum) {
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:1401: WARNING - * expressions are not callable
      accumulator = iteratee(accumulator, array[index], index, array);
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:1418: WARNING - optional arguments must be at the end
  function arrayReduceRight(array, iteratee, accumulator, initAccum) {
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:1424: WARNING - * expressions are not callable
      accumulator = iteratee(accumulator, array[length], length, array);
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:1439: WARNING - optional arguments must be at the end
  function arraySome(array, predicate) {
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:1458: WARNING - initializing variable
found   : (Function|null)
required: function(string): number
  var asciiSize = baseProperty('length');
                  ^^^^^^^^^^^^^^^^^^^^^^

./6.js:1478: WARNING - parameter The does not appear in asciiWords's parameter list
  function asciiWords(string) {
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:1650: WARNING - actual parameter 1 of Array.prototype.sort does not match formal parameter
found   : (Function|null)
required: (function(?, ?): number|undefined)
    array.sort(comparer);
               ^^^^^^^^

./6.js:1709: WARNING - Function arrayMap: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
    return arrayMap(props, function(key) {
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:1738: WARNING - Function arrayMap: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
    return arrayMap(props, function(key) {
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:1816: WARNING - initializing variable
found   : (Function|null)
required: function(string): string
  var deburrLetter = basePropertyOf(deburredLetters);
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:1825: WARNING - initializing variable
found   : (Function|null)
required: function(string): string
  var escapeHtmlChar = basePropertyOf(htmlEscapes);
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:1846: WARNING - optional arguments must be at the end
  function getValue(object, key) {
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:2054: WARNING - initializing variable
found   : (Function|null)
required: function(string): string
  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:2089: WARNING - parameter The does not appear in unicodeWords's parameter list
  function unicodeWords(string) {
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:2128: WARNING - declaration of multiple variables with shared type information
    var Array = context.Array,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:2139: WARNING - declaration of multiple variables with shared type information
    var arrayProto = Array.prototype,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:2181: WARNING - declaration of multiple variables with shared type information
    var Buffer = moduleExports ? context.Buffer : undefined,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:2196: WARNING - * expressions are not callable
        func({}, '', {});
        ^^^^^^^^^^^^^^^^

./6.js:2202: WARNING - declaration of multiple variables with shared type information
    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:2230: WARNING - cannot instantiate non-constructor
    var metaMap = WeakMap && new WeakMap;
                             ^^^^^^^^^^^

./6.js:2236: WARNING - declaration of multiple variables with shared type information
    var dataViewCtorString = toSource(DataView),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:2236: WARNING - actual parameter 1 of toSource does not match formal parameter
found   : *
required: (Function|null)
    var dataViewCtorString = toSource(DataView),
                                      ^^^^^^^^

./6.js:2237: WARNING - actual parameter 1 of toSource does not match formal parameter
found   : *
required: (Function|null)
        mapCtorString = toSource(Map),
                                 ^^^

./6.js:2238: WARNING - actual parameter 1 of toSource does not match formal parameter
found   : *
required: (Function|null)
        promiseCtorString = toSource(Promise),
                                     ^^^^^^^

./6.js:2239: WARNING - actual parameter 1 of toSource does not match formal parameter
found   : *
required: (Function|null)
        setCtorString = toSource(Set),
                                 ^^^

./6.js:2240: WARNING - actual parameter 1 of toSource does not match formal parameter
found   : *
required: (Function|null)
        weakMapCtorString = toSource(WeakMap);
                                     ^^^^^^^

./6.js:2243: WARNING - declaration of multiple variables with shared type information
    var symbolProto = Symbol ? Symbol.prototype : undefined,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:2369: WARNING - inconsistent return type
found   : *
required: (Object|null)
          return value;
                 ^^^^^

./6.js:2372: WARNING - actual parameter 1 of wrapperClone does not match formal parameter
found   : *
required: (Object|null)
          return wrapperClone(value);
                              ^^^^^

./6.js:2375: WARNING - cannot instantiate non-constructor
      return new LodashWrapper(value);
             ^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:2383: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} proto The object to inherit from.
               ^

./6.js:2384: WARNING - Bad type annotation. Unknown type Object
     * @returns {Object} Returns the new object.
                 ^

./6.js:2396: WARNING - cannot instantiate non-constructor
        var result = new object;
                     ^^^^^^^^^^

./6.js:2433: WARNING - Bad type annotation. Unknown type Object
     * @type {Object}
              ^

./6.js:2441: WARNING - Bad type annotation. Unknown type RegExp
       * @type {RegExp}
                ^

./6.js:2449: WARNING - Bad type annotation. Unknown type RegExp
       * @type {RegExp}
                ^

./6.js:2457: WARNING - Bad type annotation. Unknown type RegExp
       * @type {RegExp}
                ^

./6.js:2473: WARNING - Bad type annotation. Unknown type Object
       * @type {Object}
                ^

./6.js:2481: WARNING - Bad type annotation. Unknown type Function
         * @type {Function}
                  ^

./6.js:2523: WARNING - Function copyArray: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
      result.__actions__ = copyArray(this.__actions__);
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:2526: WARNING - Function copyArray: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
      result.__iteratees__ = copyArray(this.__iteratees__);
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:2528: WARNING - Function copyArray: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
      result.__views__ = copyArray(this.__views__);
                         ^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:2641: WARNING - * expressions are not callable
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
                                     ^^^^^^^^^^^^^^^^^^

./6.js:2655: WARNING - parameter hash does not appear in hashDelete's parameter list
    function hashDelete(key) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:2865: WARNING - cannot instantiate non-constructor
        'map': new (Map || ListCache),
               ^^^^^^^^^^^^^^^^^^^^^^

./6.js:3149: WARNING - Function copyArray: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
                         ^^^^^^^^^^^^^^^^

./6.js:3149: WARNING - Function baseClamp: called with 3 argument(s). Function requires at least 1 argument(s) and no more than 2 argument(s).
      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:3160: WARNING - Function copyArray: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
      return shuffleSelf(copyArray(array));
                         ^^^^^^^^^^^^^^^^

./6.js:3230: WARNING - inconsistent return type
found   : (Object|null)
required: (Function|null)
      return accumulator;
             ^^^^^^^^^^^

./6.js:3286: WARNING - Bad type annotation. expected closing } See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {string[]} paths The property paths to pick.
                     ^

./6.js:3286: WARNING - Bad type annotation. expecting a variable name in a @param tag. See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {string[]} paths The property paths to pick.
                     ^

./6.js:3310: WARNING - optional arguments must be at the end
    function baseClamp(number, lower, upper) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:3355: WARNING - actual parameter 1 of initCloneArray does not match formal parameter
found   : *
required: (Array|null)
        result = initCloneArray(value);
                                ^^^^^

./6.js:3357: WARNING - actual parameter 1 of copyArray does not match formal parameter
found   : *
required: (Array|null)
          return copyArray(value, result);
                           ^^^^^

./6.js:3364: WARNING - actual parameter 2 of cloneBuffer does not match formal parameter
found   : number
required: (boolean|undefined)
          return cloneBuffer(value, isDeep);
                                    ^^^^^^

./6.js:3367: WARNING - actual parameter 1 of initCloneObject does not match formal parameter
found   : *
required: (Object|null)
          result = (isFlat || isFunc) ? {} : initCloneObject(value);
                                                             ^^^^^

./6.js:3370: WARNING - actual parameter 1 of copySymbolsIn does not match formal parameter
found   : *
required: (Object|null)
              ? copySymbolsIn(value, baseAssignIn(result, value))
                              ^^^^^

./6.js:3370: WARNING - actual parameter 2 of baseAssignIn does not match formal parameter
found   : *
required: (Object|null)
              ? copySymbolsIn(value, baseAssignIn(result, value))
                                                          ^^^^^

./6.js:3371: WARNING - actual parameter 1 of copySymbols does not match formal parameter
found   : *
required: (Object|null)
              : copySymbols(value, baseAssign(result, value));
                            ^^^^^

./6.js:3371: WARNING - actual parameter 2 of baseAssign does not match formal parameter
found   : *
required: (Object|null)
              : copySymbols(value, baseAssign(result, value));
                                                      ^^^^^

./6.js:3377: WARNING - actual parameter 1 of initCloneByTag does not match formal parameter
found   : *
required: (Object|null)
          result = initCloneByTag(value, tag, isDeep);
                                  ^^^^^

./6.js:3377: WARNING - actual parameter 3 of initCloneByTag does not match formal parameter
found   : number
required: (boolean|undefined)
          result = initCloneByTag(value, tag, isDeep);
                                              ^^^^^^

./6.js:3390: WARNING - actual parameter 5 of baseClone does not match formal parameter
found   : *
required: (Object|null|undefined)
          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
                                                                        ^^^^^

./6.js:3398: WARNING - actual parameter 5 of baseClone does not match formal parameter
found   : *
required: (Object|null|undefined)
          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
                                                                        ^^^^^

./6.js:3408: WARNING - actual parameter 1 of keysFunc does not match formal parameter
found   : *
required: (Object|null)
      var props = isArr ? undefined : keysFunc(value);
                                               ^^^^^

./6.js:3409: WARNING - Function arrayEach: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
      arrayEach(props || value, function(subValue, key) {
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:3409: WARNING - actual parameter 1 of arrayEach does not match formal parameter
found   : *
required: (Array|null|undefined)
      arrayEach(props || value, function(subValue, key) {
                ^^^^^^^^^^^^^^

./6.js:3415: WARNING - actual parameter 5 of baseClone does not match formal parameter
found   : *
required: (Object|null|undefined)
        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
                                                                               ^^^^^

./6.js:3500: WARNING - Function arrayMap: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
        values = arrayMap(values, baseUnary(iteratee));
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:3509: WARNING - assignment
found   : SetCache
required: (Array|null)
        values = new SetCache(values);
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:3537: WARNING - Bad type annotation. Unknown type Array
     * @param {Array|Object} collection The collection to iterate over.
               ^

./6.js:3537: WARNING - Bad type annotation. Unknown type Object
     * @param {Array|Object} collection The collection to iterate over.
                     ^

./6.js:3538: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} iteratee The function invoked per iteration.
               ^

./6.js:3539: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array|Object} Returns `collection`.
                 ^

./6.js:3539: WARNING - Bad type annotation. Unknown type Object
     * @returns {Array|Object} Returns `collection`.
                       ^

./6.js:3541: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), (?|null)): (?|null)
    var baseEach = createBaseEach(baseForOwn);
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:3547: WARNING - Bad type annotation. Unknown type Array
     * @param {Array|Object} collection The collection to iterate over.
               ^

./6.js:3547: WARNING - Bad type annotation. Unknown type Object
     * @param {Array|Object} collection The collection to iterate over.
                     ^

./6.js:3548: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} iteratee The function invoked per iteration.
               ^

./6.js:3549: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array|Object} Returns `collection`.
                 ^

./6.js:3549: WARNING - Bad type annotation. Unknown type Object
     * @returns {Array|Object} Returns `collection`.
                       ^

./6.js:3551: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), (?|null)): (?|null)
    var baseEachRight = createBaseEach(baseForOwnRight, true);
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:3589: WARNING - Variable referenced before declaration: computed
        if (current != null && (computed === undefined
                                ^^^^^^^^

./6.js:3591: WARNING - Variable referenced before declaration: computed
              : comparator(current, computed)
                                    ^^^^^^^^

./6.js:3654: WARNING - Bad type annotation. missing closing ] See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {Array} [result=[]] The initial result value.
                              ^

./6.js:3657: WARNING - optional arguments must be at the end
    function baseFlatten(array, depth, predicate, isStrict, result) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:3661: WARNING - assignment
found   : function(*): boolean
required: (boolean|undefined)
      predicate || (predicate = isFlattenable);
                    ^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:3666: WARNING - (boolean|function(*): boolean) expressions are not callable
        if (depth > 0 && predicate(value)) {
                         ^^^^^^^^^^^^^^^^

./6.js:3669: WARNING - Function baseFlatten: called with 5 argument(s). Function requires at least 2 argument(s) and no more than 4 argument(s).
            baseFlatten(value, depth - 1, predicate, isStrict, result);
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:3669: WARNING - actual parameter 3 of baseFlatten does not match formal parameter
found   : (boolean|function(*): boolean|undefined)
required: (boolean|undefined)
            baseFlatten(value, depth - 1, predicate, isStrict, result);
                                          ^^^^^^^^^

./6.js:3686: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} object The object to iterate over.
               ^

./6.js:3687: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} iteratee The function invoked per iteration.
               ^

./6.js:3688: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} keysFunc The function to get the keys of `object`.
               ^

./6.js:3689: WARNING - Bad type annotation. Unknown type Object
     * @returns {Object} Returns `object`.
                 ^

./6.js:3691: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), (?|null), (?|null)): (?|null)
    var baseFor = createBaseFor();
                  ^^^^^^^^^^^^^^^

./6.js:3698: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} object The object to iterate over.
               ^

./6.js:3699: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} iteratee The function invoked per iteration.
               ^

./6.js:3700: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} keysFunc The function to get the keys of `object`.
               ^

./6.js:3701: WARNING - Bad type annotation. Unknown type Object
     * @returns {Object} Returns `object`.
                 ^

./6.js:3703: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), (?|null), (?|null)): (?|null)
    var baseForRight = createBaseFor(true);
                       ^^^^^^^^^^^^^^^^^^^

./6.js:3739: WARNING - Function arrayFilter: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
      return arrayFilter(props, function(key) {
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:3817: WARNING - optional arguments must be at the end
    function baseHas(object, key) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:3829: WARNING - optional arguments must be at the end
    function baseHasIn(object, key) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:3868: WARNING - Function arrayMap: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
          array = arrayMap(array, baseUnary(iteratee));
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:3888: WARNING - Function includes: called with 3 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
              : includes(result, computed, comparator)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:3895: WARNING - Function includes: called with 3 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
                  : includes(arrays[othIndex], computed, comparator))
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:3924: WARNING - inconsistent return type
found   : (Object|null)
required: (Function|null)
      return accumulator;
             ^^^^^^^^^^^

./6.js:3939: WARNING - assignment
found   : *
required: (Object|null)
      object = parent(object, path);
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:3998: WARNING - actual parameter 1 of baseIsEqualDeep does not match formal parameter
found   : *
required: (Object|null)
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
                             ^^^^^

./6.js:3998: WARNING - actual parameter 2 of baseIsEqualDeep does not match formal parameter
found   : *
required: (Object|null)
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
                                    ^^^^^

./6.js:3998: WARNING - actual parameter 3 of baseIsEqualDeep does not match formal parameter
found   : boolean
required: number
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
                                           ^^^^^^^

./6.js:3998: WARNING - actual parameter 4 of baseIsEqualDeep does not match formal parameter
found   : (Function|null|undefined)
required: (Function|null)
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
                                                    ^^^^^^^^^^

./6.js:4038: WARNING - actual parameter 1 of equalArrays does not match formal parameter
found   : (Object|null)
required: (Array|null)
          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
                        ^^^^^^

./6.js:4038: WARNING - actual parameter 2 of equalArrays does not match formal parameter
found   : (Object|null)
required: (Array|null)
          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
                                ^^^^^

./6.js:4038: WARNING - actual parameter 6 of equalArrays does not match formal parameter
found   : (Object|null|undefined)
required: (Object|null)
          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
                                                                       ^^^^^

./6.js:4039: WARNING - actual parameter 7 of equalByTag does not match formal parameter
found   : (Object|null|undefined)
required: (Object|null)
          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
                                                                              ^^^^^

./6.js:4057: WARNING - actual parameter 6 of equalObjects does not match formal parameter
found   : (Object|null|undefined)
required: (Object|null)
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
                                                                         ^^^^^

./6.js:4115: WARNING - actual parameter 3 of baseIsEqual does not match formal parameter
found   : number
required: boolean
                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:4134: WARNING - actual parameter 1 of isMasked does not match formal parameter
found   : *
required: (Function|null)
      if (!isObject(value) || isMasked(value)) {
                                       ^^^^^

./6.js:4138: WARNING - actual parameter 1 of toSource does not match formal parameter
found   : *
required: (Function|null)
      return pattern.test(toSource(value));
                                   ^^^^^

./6.js:4194: WARNING - actual parameter 1 of baseMatches does not match formal parameter
found   : *
required: (Object|null)
          : baseMatches(value);
                        ^^^^^

./6.js:4196: WARNING - actual parameter 1 of property does not match formal parameter
found   : *
required: (Array|null|string)
      return property(value);
                      ^^^^^

./6.js:4299: WARNING - actual parameter 1 of matchesStrictComparable does not match formal parameter
found   : (string|symbol)
required: string
        return matchesStrictComparable(toKey(path), srcValue);
                                       ^^^^^^^^^^^

./6.js:4305: WARNING - actual parameter 3 of baseIsEqual does not match formal parameter
found   : number
required: boolean
          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:4383: WARNING - Function copyArray: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
            newValue = copyArray(objValue);
                       ^^^^^^^^^^^^^^^^^^^

./6.js:4383: WARNING - actual parameter 1 of copyArray does not match formal parameter
found   : *
required: (Array|null)
            newValue = copyArray(objValue);
                                 ^^^^^^^^

./6.js:4391: WARNING - actual parameter 1 of cloneTypedArray does not match formal parameter
found   : *
required: (Object|null)
            newValue = cloneTypedArray(srcValue, true);
                                       ^^^^^^^^

./6.js:4403: WARNING - actual parameter 1 of initCloneObject does not match formal parameter
found   : *
required: (Object|null)
            newValue = initCloneObject(srcValue);
                                       ^^^^^^^^

./6.js:4441: WARNING - Bad type annotation. expected closing } See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
                       ^

./6.js:4441: WARNING - Bad type annotation. expecting a variable name in a @param tag. See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
                       ^

./6.js:4442: WARNING - Bad type annotation. expected closing } See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {string[]} orders The sort orders of `iteratees`.
                     ^

./6.js:4442: WARNING - Bad type annotation. expecting a variable name in a @param tag. See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {string[]} orders The sort orders of `iteratees`.
                     ^

./6.js:4447: WARNING - Function arrayMap: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:4450: WARNING - Function arrayMap: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
        var criteria = arrayMap(iteratees, function(iteratee) {
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:4467: WARNING - Bad type annotation. expected closing } See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {string[]} paths The property paths to pick.
                     ^

./6.js:4467: WARNING - Bad type annotation. expecting a variable name in a @param tag. See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {string[]} paths The property paths to pick.
                     ^

./6.js:4481: WARNING - Bad type annotation. expected closing } See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {string[]} paths The property paths to pick.
                     ^

./6.js:4481: WARNING - Bad type annotation. expecting a variable name in a @param tag. See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {string[]} paths The property paths to pick.
                     ^

./6.js:4532: WARNING - Function copyArray: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
        values = copyArray(values);
                 ^^^^^^^^^^^^^^^^^

./6.js:4535: WARNING - Function arrayMap: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
        seen = arrayMap(array, baseUnary(iteratee));
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:4542: WARNING - actual parameter 4 of indexOf does not match formal parameter
found   : (Function|null|undefined)
required: (Function|null)
        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
                                                               ^^^^^^^^^^

./6.js:4558: WARNING - Bad type annotation. expected closing } See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {number[]} indexes The indexes of elements to remove.
                     ^

./6.js:4558: WARNING - Bad type annotation. expecting a variable name in a @param tag. See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {number[]} indexes The indexes of elements to remove.
                     ^

./6.js:4567: WARNING - Variable referenced before declaration: previous
        if (length == lastIndex || index !== previous) {
                                             ^^^^^^^^

./6.js:4652: WARNING - Function overRest: called with 3 argument(s). Function requires at least 1 argument(s) and no more than 2 argument(s).
      return setToString(overRest(func, start, identity), func + '');
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:4676: WARNING - Function baseClamp: called with 3 argument(s). Function requires at least 1 argument(s) and no more than 2 argument(s).
      return shuffleSelf(array, baseClamp(n, 0, array.length));
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:4713: WARNING - actual parameter 2 of assignValue does not match formal parameter
found   : (string|symbol)
required: string
        assignValue(nested, key, newValue);
                            ^^^

./6.js:4723: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} func The function to associate metadata with.
               ^

./6.js:4725: WARNING - Bad type annotation. Unknown type Function
     * @returns {Function} Returns `func`.
                 ^

./6.js:4736: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} func The function to modify.
               ^

./6.js:4737: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} string The `toString` result.
               ^

./6.js:4738: WARNING - Bad type annotation. Unknown type Function
     * @returns {Function} Returns `func`.
                 ^

./6.js:4914: WARNING - Variable referenced before declaration: seen
        if (!index || !eq(computed, seen)) {
                                    ^^^^

./6.js:4955: WARNING - Function arrayMap: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
        return arrayMap(value, baseToString) + '';
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:4955: WARNING - actual parameter 1 of arrayMap does not match formal parameter
found   : *
required: (Array|null|undefined)
        return arrayMap(value, baseToString) + '';
                        ^^^^^

./6.js:4961: WARNING - right operand
found   : *
required: number
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
                                    ^^^^^

./6.js:5035: WARNING - assignment
found   : *
required: (Object|null)
      object = parent(object, path);
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:5093: WARNING - actual parameter 3 of arrayReduce does not match formal parameter
found   : *
required: (boolean|undefined)
      }, result);
         ^^^^^^

./6.js:5157: WARNING - inconsistent return type
found   : *
required: (Object|null)
      return isArrayLikeObject(value) ? value : [];
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:5181: WARNING - inconsistent return type
found   : *
required: (Array|null)
        return value;
               ^^^^^

./6.js:5191: WARNING - Bad type annotation. Unknown type Function
     * @type {Function}
              ^

./6.js:5192: WARNING - Bad type annotation. type annotation incompatible with other annotations. See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {Function} func The function to apply a rest parameter to.
                         ^

./6.js:5193: WARNING - Bad type annotation. type annotation incompatible with other annotations. See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @returns {Function} Returns the new function.
       ^

./6.js:5216: WARNING - Bad type annotation. Unknown type Object
     * @param {number|Object} id The timer id or timeout object of the timer to clear.
                      ^

./6.js:5226: WARNING - Bad type annotation. Unknown type Buffer
     * @param {Buffer} buffer The buffer to clone.
               ^

./6.js:5228: WARNING - Bad type annotation. Unknown type Buffer
     * @returns {Buffer} Returns the cloned buffer.
                 ^

./6.js:5353: WARNING - Bad type annotation. expected closing } See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {boolean[]|string[]} orders The order to sort by for each property.
                      ^

./6.js:5353: WARNING - Bad type annotation. expecting a variable name in a @param tag. See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {boolean[]|string[]} orders The order to sort by for each property.
                      ^

./6.js:5460: WARNING - Bad type annotation. missing closing ] See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {Array} [array=[]] The array to copy values to.
                             ^

./6.js:5480: WARNING - Bad type annotation. missing closing ] See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {Object} [object={}] The object to copy properties to.
                               ^

./6.js:5515: WARNING - Bad type annotation. missing closing ] See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {Object} [object={}] The object to copy symbols to.
                               ^

./6.js:5527: WARNING - Bad type annotation. missing closing ] See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {Object} [object={}] The object to copy symbols to.
                               ^

./6.js:5547: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
        return func(collection, setter, getIteratee(iteratee, 2), accumulator);
                                        ^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:5694: WARNING - actual parameter 3 of arrayReduce does not match formal parameter
found   : string
required: (boolean|undefined)
        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
                                                                                ^^

./6.js:5779: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
          var iteratee = getIteratee(predicate, 3);
                         ^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:5799: WARNING - Property thru never defined on LodashWrapper.prototype
            prereq = LodashWrapper.prototype.thru;
                                             ^^^^

./6.js:5809: WARNING - Variable referenced before declaration: wrapper
          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
                         ^^^^^^^

./6.js:5810: WARNING - cannot instantiate non-constructor
            var wrapper = new LodashWrapper([], true);
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:5874: WARNING - actual parameter 1 of createCtor does not match formal parameter
found   : (Function|null|string)
required: (Function|null)
          Ctor = isBindKey ? undefined : createCtor(func);
                                                    ^^^^

./6.js:5889: WARNING - actual parameter 3 of composeArgs does not match formal parameter
found   : (Array|null|undefined)
required: (Array|null)
          args = composeArgs(args, partials, holders, isCurried);
                                             ^^^^^^^

./6.js:5892: WARNING - actual parameter 3 of composeArgsRight does not match formal parameter
found   : (Array|null|undefined)
required: (Array|null)
          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
                                                       ^^^^^^^^^^^^

./6.js:5898: WARNING - actual parameter 1 of createRecurry does not match formal parameter
found   : (Function|null|string)
required: (Function|null)
            func, bitmask, createHybrid, wrapper.placeholder, thisArg,
            ^^^^

./6.js:5979: WARNING - Function arrayMap: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:5995: WARNING - Bad type annotation. missing closing ] See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {string} [chars=' '] The string used as padding.
                                ^

./6.js:6160: WARNING - Bad type annotation. Unknown type Array
     * @param {Array} values The values to add to the set.
               ^

./6.js:6161: WARNING - Bad type annotation. Unknown type Object
     * @returns {Object} Returns the new set.
                 ^

./6.js:6163: WARNING - cannot instantiate non-constructor
    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
                                             ^^^^^^^^^^^^^^

./6.js:6164: WARNING - cannot instantiate non-constructor
      return new Set(values);
             ^^^^^^^^^^^^^^^

./6.js:6240: WARNING - actual parameter 2 of mergeData does not match formal parameter
found   : *
required: (Array|null)
        mergeData(newData, data);
                           ^^^^

./6.js:6305: WARNING - actual parameter 1 of baseMerge does not match formal parameter
found   : *
required: (Object|null)
        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
                  ^^^^^^^^

./6.js:6305: WARNING - actual parameter 2 of baseMerge does not match formal parameter
found   : *
required: (Object|null)
        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
                            ^^^^^^^^

./6.js:6320: WARNING - parameter key does not appear in customOmitClone's parameter list
    function customOmitClone(value) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:6376: WARNING - Function arraySome: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
          if (!arraySome(other, function(othValue, othIndex) {
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:6565: WARNING - Function overRest: called with 3 argument(s). Function requires at least 1 argument(s) and no more than 2 argument(s).
      return setToString(overRest(func, undefined, flatten), func + '');
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:6595: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} func The function to query.
               ^

./6.js:6647: WARNING - parameter arity does not appear in getIteratee's parameter list
    function getIteratee() {
    ^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:6647: WARNING - parameter value does not appear in getIteratee's parameter list
    function getIteratee() {
    ^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:6650: WARNING - Function result: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
      return arguments.length ? result(arguments[0], arguments[1]) : result;
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:6697: WARNING - Function getValue: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
      var value = getValue(object, key);
                  ^^^^^^^^^^^^^^^^^^^^^

./6.js:6732: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} object The object to query.
               ^

./6.js:6733: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the array of symbols.
                 ^

./6.js:6740: WARNING - Function arrayFilter: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
      return arrayFilter(nativeGetSymbols(object), function(symbol) {
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:6749: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} object The object to query.
               ^

./6.js:6750: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the array of symbols.
                 ^

./6.js:6771: WARNING - cannot instantiate non-constructor
    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:6772: WARNING - cannot instantiate non-constructor
        (Map && getTag(new Map) != mapTag) ||
                       ^^^^^^^

./6.js:6774: WARNING - cannot instantiate non-constructor
        (Set && getTag(new Set) != setTag) ||
                       ^^^^^^^

./6.js:6775: WARNING - cannot instantiate non-constructor
        (WeakMap && getTag(new WeakMap) != weakMapTag)) {
                           ^^^^^^^^^^^

./6.js:6909: WARNING - Missing return statement. Function expected to return (Object|null).
    function initCloneByTag(object, tag, isDeep) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:6913: WARNING - actual parameter 1 of cloneArrayBuffer does not match formal parameter
found   : Object
required: (ArrayBuffer|null)
          return cloneArrayBuffer(object);
                                  ^^^^^^

./6.js:6951: WARNING - Bad type annotation. type annotation incompatible with other annotations. See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @returns {string} Returns the modified source.
       ^

./6.js:6956: WARNING - inconsistent return type
found   : string
required: (Array|null)
        return source;
               ^^^^^^

./6.js:6961: WARNING - inconsistent return type
found   : string
required: (Array|null)
      return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:6991: WARNING - left side of numeric comparison
found   : *
required: number
            (value > -1 && value % 1 == 0 && value < length);
             ^^^^^

./6.js:7201: WARNING - Function composeArgs: called with 3 argument(s). Function requires at least 4 argument(s) and no more than 4 argument(s).
        data[3] = partials ? composeArgs(partials, value, source[4]) : value;
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:7208: WARNING - Function composeArgsRight: called with 3 argument(s). Function requires at least 4 argument(s) and no more than 4 argument(s).
        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:7270: WARNING - optional arguments must be at the end
    function overRest(func, start, transform) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:7316: WARNING - Function copyArray: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
          oldArray = copyArray(array);
                     ^^^^^^^^^^^^^^^^

./6.js:7351: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} func The function to associate metadata with.
               ^

./6.js:7353: WARNING - Bad type annotation. Unknown type Function
     * @returns {Function} Returns `func`.
                 ^

./6.js:7355: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), *): (?|null)
    var setData = shortOut(baseSetData);
                  ^^^^^^^^^^^^^^^^^^^^^

./6.js:7361: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} func The function to delay.
               ^

./6.js:7363: WARNING - Bad type annotation. Unknown type Object
     * @returns {number|Object} Returns the timer id or timeout object.
                        ^

./6.js:7373: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} func The function to modify.
               ^

./6.js:7374: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} string The `toString` result.
               ^

./6.js:7375: WARNING - Bad type annotation. Unknown type Function
     * @returns {Function} Returns `func`.
                 ^

./6.js:7377: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), (?|null)): (?|null)
    var setToString = shortOut(baseSetToString);
                      ^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:7444: WARNING - assignment to property length of Array
found   : (number|undefined)
required: number
      array.length = size;
      ^^^^^^^^^^^^^^^^^^^

./6.js:7453: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the property path array.
                 ^

./6.js:7455: WARNING - initializing variable
found   : (Function|null)
required: function(string): (?|null)
    var stringToPath = memoizeCapped(function(string) {
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:7475: WARNING - inconsistent return type
found   : *
required: (string|symbol)
        return value;
               ^^^^^

./6.js:7478: WARNING - right operand
found   : *
required: number
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
                                    ^^^^^

./6.js:7495: WARNING - unreachable code
        } catch (e) {}
          ^^^^^^^^^^^^

./6.js:7506: WARNING - Bad type annotation. type annotation incompatible with other annotations. See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @returns {Array} Returns `details`.
       ^

./6.js:7509: WARNING - Function arrayEach: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
      arrayEach(wrapFlags, function(pair) {
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:7511: WARNING - Function arrayIncludes: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:7529: WARNING - cannot instantiate non-constructor
      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:7530: WARNING - Function copyArray: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
      result.__actions__ = copyArray(wrapper.__actions__);
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:7559: WARNING - optional arguments must be at the end
    function chunk(array, size, guard) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:7631: WARNING - parameter array does not appear in concat's parameter list
    function concat() {
    ^^^^^^^^^^^^^^^^^^^

./6.js:7631: WARNING - parameter values does not appear in concat's parameter list
    function concat() {
    ^^^^^^^^^^^^^^^^^^^

./6.js:7643: WARNING - Function copyArray: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
                                        ^^^^^^^^^^^^^^^^

./6.js:7658: WARNING - Bad type annotation. Unknown type Array
     * @param {Array} array The array to inspect.
               ^

./6.js:7659: WARNING - Bad type annotation. Unknown type Array
     * @param {...Array} [values] The values to exclude.
                  ^

./6.js:7660: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the new array of filtered values.
                 ^

./6.js:7667: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), ...(?|null)): (?|null)
    var difference = baseRest(function(array, values) {
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:7669: WARNING - actual parameter 3 of baseFlatten does not match formal parameter
found   : function(*): boolean
required: (boolean|undefined)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
                                                       ^^^^^^^^^^^^^^^^^

./6.js:7686: WARNING - Bad type annotation. Unknown type Array
     * @param {Array} array The array to inspect.
               ^

./6.js:7687: WARNING - Bad type annotation. Unknown type Array
     * @param {...Array} [values] The values to exclude.
                  ^

./6.js:7688: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
               ^

./6.js:7689: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the new array of filtered values.
                 ^

./6.js:7699: WARNING - variable length argument must be last
    var differenceBy = baseRest(function(array, values) {
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:7699: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), ...(?|null)): (?|null)
    var differenceBy = baseRest(function(array, values) {
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:7705: WARNING - actual parameter 3 of baseFlatten does not match formal parameter
found   : function(*): boolean
required: (boolean|undefined)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))
                                                       ^^^^^^^^^^^^^^^^^

./6.js:7705: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))
                                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:7721: WARNING - Bad type annotation. Unknown type Array
     * @param {Array} array The array to inspect.
               ^

./6.js:7722: WARNING - Bad type annotation. Unknown type Array
     * @param {...Array} [values] The values to exclude.
                  ^

./6.js:7723: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} [comparator] The comparator invoked per element.
               ^

./6.js:7724: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the new array of filtered values.
                 ^

./6.js:7732: WARNING - variable length argument must be last
    var differenceWith = baseRest(function(array, values) {
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:7732: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), ...(?|null)): (?|null)
    var differenceWith = baseRest(function(array, values) {
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:7738: WARNING - actual parameter 3 of baseFlatten does not match formal parameter
found   : function(*): boolean
required: (boolean|undefined)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)
                                                       ^^^^^^^^^^^^^^^^^

./6.js:7738: WARNING - actual parameter 4 of baseDifference does not match formal parameter
found   : *
required: (Function|null|undefined)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)
                                                                                            ^^^^^^^^^^

./6.js:7767: WARNING - optional arguments must be at the end
    function drop(array, n, guard) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:7801: WARNING - optional arguments must be at the end
    function dropRight(array, n, guard) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:7848: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
        ? baseWhile(array, getIteratee(predicate, 3), true, true)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:7889: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
        ? baseWhile(array, getIteratee(predicate, 3), true)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:7978: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      return baseFindIndex(array, getIteratee(predicate, 3), index);
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:8028: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      return baseFindIndex(array, getIteratee(predicate, 3), index, true);
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:8211: WARNING - Bad type annotation. Unknown type Array
     * @param {...Array} [arrays] The arrays to inspect.
                  ^

./6.js:8212: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the new array of intersecting values.
                 ^

./6.js:8218: WARNING - initializing variable
found   : (Function|null)
required: function(...(?|null)): (?|null)
    var intersection = baseRest(function(arrays) {
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:8219: WARNING - Function arrayMap: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
      var mapped = arrayMap(arrays, castArrayLikeObject);
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:8236: WARNING - Bad type annotation. Unknown type Array
     * @param {...Array} [arrays] The arrays to inspect.
                  ^

./6.js:8237: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
               ^

./6.js:8238: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the new array of intersecting values.
                 ^

./6.js:8248: WARNING - variable length argument must be last
    var intersectionBy = baseRest(function(arrays) {
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:8248: WARNING - initializing variable
found   : (Function|null)
required: function(...(?|null)): (?|null)
    var intersectionBy = baseRest(function(arrays) {
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:8250: WARNING - Function arrayMap: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
          mapped = arrayMap(arrays, castArrayLikeObject);
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:8258: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
        ? baseIntersection(mapped, getIteratee(iteratee, 2))
                                   ^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:8272: WARNING - Bad type annotation. Unknown type Array
     * @param {...Array} [arrays] The arrays to inspect.
                  ^

./6.js:8273: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} [comparator] The comparator invoked per element.
               ^

./6.js:8274: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the new array of intersecting values.
                 ^

./6.js:8283: WARNING - variable length argument must be last
    var intersectionWith = baseRest(function(arrays) {
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:8283: WARNING - initializing variable
found   : (Function|null)
required: function(...(?|null)): (?|null)
    var intersectionWith = baseRest(function(arrays) {
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:8285: WARNING - Function arrayMap: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
          mapped = arrayMap(arrays, castArrayLikeObject);
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:8304: WARNING - Bad type annotation. missing closing ] See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {string} [separator=','] The element separator.
                                   ^

./6.js:8407: WARNING - Bad type annotation. Unknown type Array
     * @param {Array} array The array to modify.
               ^

./6.js:8409: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns `array`.
                 ^

./6.js:8418: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), ...*): (?|null)
    var pull = baseRest(pullAll);
               ^^^^^^^^^^^^^^^^^

./6.js:8471: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
        ? basePullAll(array, values, getIteratee(iteratee, 2))
                                     ^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:8514: WARNING - Bad type annotation. Unknown type Array
     * @param {Array} array The array to modify.
               ^

./6.js:8515: WARNING - Bad type annotation. missing closing ) See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
                                ^

./6.js:8516: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the new array of removed elements.
                 ^

./6.js:8528: WARNING - initializing variable
found   : (Function|null)
required: function((?|null)): (?|null)
    var pullAt = flatRest(function(array, indexes) {
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:8532: WARNING - Function arrayMap: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
      basePullAt(array, arrayMap(indexes, function(index) {
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:8576: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      predicate = getIteratee(predicate, 3);
                  ^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:8694: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
                                             ^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:8772: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
                                             ^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:8841: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
        ? baseSortedUniq(array, getIteratee(iteratee, 2))
                                ^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:8889: WARNING - optional arguments must be at the end
    function take(array, n, guard) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:8922: WARNING - optional arguments must be at the end
    function takeRight(array, n, guard) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:8969: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
        ? baseWhile(array, getIteratee(predicate, 3), false, true)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:9010: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
        ? baseWhile(array, getIteratee(predicate, 3))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:9023: WARNING - Bad type annotation. Unknown type Array
     * @param {...Array} [arrays] The arrays to inspect.
                  ^

./6.js:9024: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the new array of combined values.
                 ^

./6.js:9030: WARNING - initializing variable
found   : (Function|null)
required: function(...(?|null)): (?|null)
    var union = baseRest(function(arrays) {
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:9031: WARNING - actual parameter 3 of baseFlatten does not match formal parameter
found   : function(*): boolean
required: (boolean|undefined)
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
                                             ^^^^^^^^^^^^^^^^^

./6.js:9045: WARNING - Bad type annotation. Unknown type Array
     * @param {...Array} [arrays] The arrays to inspect.
                  ^

./6.js:9046: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
               ^

./6.js:9047: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the new array of combined values.
                 ^

./6.js:9057: WARNING - variable length argument must be last
    var unionBy = baseRest(function(arrays) {
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:9057: WARNING - initializing variable
found   : (Function|null)
required: function(...(?|null)): (?|null)
    var unionBy = baseRest(function(arrays) {
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:9062: WARNING - actual parameter 3 of baseFlatten does not match formal parameter
found   : function(*): boolean
required: (boolean|undefined)
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
                                             ^^^^^^^^^^^^^^^^^

./6.js:9062: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:9075: WARNING - Bad type annotation. Unknown type Array
     * @param {...Array} [arrays] The arrays to inspect.
                  ^

./6.js:9076: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} [comparator] The comparator invoked per element.
               ^

./6.js:9077: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the new array of combined values.
                 ^

./6.js:9086: WARNING - variable length argument must be last
    var unionWith = baseRest(function(arrays) {
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:9086: WARNING - initializing variable
found   : (Function|null)
required: function(...(?|null)): (?|null)
    var unionWith = baseRest(function(arrays) {
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:9089: WARNING - actual parameter 3 of baseFlatten does not match formal parameter
found   : function(*): boolean
required: (boolean|undefined)
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
                                             ^^^^^^^^^^^^^^^^^

./6.js:9138: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];
                                                       ^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:9190: WARNING - Function arrayFilter: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
      array = arrayFilter(array, function(group) {
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:9197: WARNING - Function arrayMap: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
        return arrayMap(array, baseProperty(index));
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:9230: WARNING - Function arrayMap: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
      return arrayMap(result, function(group) {
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:9231: WARNING - actual parameter 1 of apply does not match formal parameter
found   : (Function|null|undefined)
required: (Function|null)
        return apply(iteratee, undefined, group);
                     ^^^^^^^^

./6.js:9246: WARNING - Bad type annotation. Unknown type Array
     * @param {Array} array The array to inspect.
               ^

./6.js:9248: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the new array of filtered values.
                 ^

./6.js:9255: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), ...*): (?|null)
    var without = baseRest(function(array, values) {
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:9271: WARNING - Bad type annotation. Unknown type Array
     * @param {...Array} [arrays] The arrays to inspect.
                  ^

./6.js:9272: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the new array of filtered values.
                 ^

./6.js:9279: WARNING - initializing variable
found   : (Function|null)
required: function(...(?|null)): (?|null)
    var xor = baseRest(function(arrays) {
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:9280: WARNING - Function arrayFilter: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
      return baseXor(arrayFilter(arrays, isArrayLikeObject));
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:9294: WARNING - Bad type annotation. Unknown type Array
     * @param {...Array} [arrays] The arrays to inspect.
                  ^

./6.js:9295: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
               ^

./6.js:9296: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the new array of filtered values.
                 ^

./6.js:9306: WARNING - variable length argument must be last
    var xorBy = baseRest(function(arrays) {
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:9306: WARNING - initializing variable
found   : (Function|null)
required: function(...(?|null)): (?|null)
    var xorBy = baseRest(function(arrays) {
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:9311: WARNING - Function arrayFilter: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:9311: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
                                                             ^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:9324: WARNING - Bad type annotation. Unknown type Array
     * @param {...Array} [arrays] The arrays to inspect.
                  ^

./6.js:9325: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} [comparator] The comparator invoked per element.
               ^

./6.js:9326: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the new array of filtered values.
                 ^

./6.js:9335: WARNING - variable length argument must be last
    var xorWith = baseRest(function(arrays) {
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:9335: WARNING - initializing variable
found   : (Function|null)
required: function(...(?|null)): (?|null)
    var xorWith = baseRest(function(arrays) {
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:9338: WARNING - Function arrayFilter: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:9350: WARNING - Bad type annotation. Unknown type Array
     * @param {...Array} [arrays] The arrays to process.
                  ^

./6.js:9351: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the new array of grouped elements.
                 ^

./6.js:9357: WARNING - initializing variable
found   : (Function|null)
required: function(...(?|null)): (?|null)
    var zip = baseRest(unzip);
              ^^^^^^^^^^^^^^^

./6.js:9367: WARNING - Bad type annotation. missing closing ] See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {Array} [props=[]] The property identifiers.
                             ^

./6.js:9368: WARNING - Bad type annotation. missing closing ] See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {Array} [values=[]] The property values.
                              ^

./6.js:9386: WARNING - Bad type annotation. missing closing ] See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {Array} [props=[]] The property identifiers.
                             ^

./6.js:9387: WARNING - Bad type annotation. missing closing ] See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {Array} [values=[]] The property values.
                              ^

./6.js:9407: WARNING - Bad type annotation. Unknown type Array
     * @param {...Array} [arrays] The arrays to process.
                  ^

./6.js:9408: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} [iteratee=_.identity] The function to combine
               ^

./6.js:9410: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the new array of grouped elements.
                 ^

./6.js:9418: WARNING - variable length argument must be last
    var zipWith = baseRest(function(arrays) {
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:9418: WARNING - initializing variable
found   : (Function|null)
required: function(...(?|null)): (?|null)
    var zipWith = baseRest(function(arrays) {
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:9525: WARNING - Bad type annotation. missing closing ) See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {...(string|string[])} [paths] The property paths to pick.
                                ^

./6.js:9526: WARNING - Bad type annotation. Unknown type Object
     * @returns {Object} Returns the new `lodash` wrapper instance.
                 ^

./6.js:9534: WARNING - initializing variable
found   : (Function|null)
required: function(): (?|null)
    var wrapperAt = flatRest(function(paths) {
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:9550: WARNING - cannot instantiate non-constructor
      return new LodashWrapper(value, this.__chain__).thru(function(array) {
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:9616: WARNING - cannot instantiate non-constructor
      return new LodashWrapper(this.value(), this.__chain__);
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:9706: WARNING - Variable referenced before declaration: previous
          previous.__wrapped__ = clone;
          ^^^^^^^^

./6.js:9714: WARNING - inconsistent return type
found   : (Object|undefined)
required: (Object|null)
      return result;
             ^^^^^^

./6.js:9750: WARNING - cannot instantiate non-constructor
        return new LodashWrapper(wrapped, this.__chain__);
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:9785: WARNING - Bad type annotation. Unknown type Array
     * @param {Array|Object} collection The collection to iterate over.
               ^

./6.js:9785: WARNING - Bad type annotation. Unknown type Object
     * @param {Array|Object} collection The collection to iterate over.
                     ^

./6.js:9786: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
               ^

./6.js:9787: WARNING - Bad type annotation. Unknown type Object
     * @returns {Object} Returns the composed aggregate object.
                 ^

./6.js:9797: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), (?|null)=): (?|null)
    var countBy = createAggregator(function(result, value, key) {
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:9846: WARNING - optional arguments must be at the end
    function every(collection, predicate, guard) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:9851: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      return func(collection, getIteratee(predicate, 3));
                              ^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:9893: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      return func(collection, getIteratee(predicate, 3));
                              ^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:9905: WARNING - Bad type annotation. Unknown type Array
     * @param {Array|Object} collection The collection to inspect.
               ^

./6.js:9905: WARNING - Bad type annotation. Unknown type Object
     * @param {Array|Object} collection The collection to inspect.
                     ^

./6.js:9906: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
               ^

./6.js:9932: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), (?|null)=, number=): *
    var find = createFind(findIndex);
               ^^^^^^^^^^^^^^^^^^^^^

./6.js:9942: WARNING - Bad type annotation. Unknown type Array
     * @param {Array|Object} collection The collection to inspect.
               ^

./6.js:9942: WARNING - Bad type annotation. Unknown type Object
     * @param {Array|Object} collection The collection to inspect.
                     ^

./6.js:9943: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
               ^

./6.js:9953: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), (?|null)=, number=): *
    var findLast = createFind(findLastIndex);
                   ^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:10062: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      return func(collection, getIteratee(iteratee, 3));
                              ^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:10087: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      return func(collection, getIteratee(iteratee, 3));
                              ^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:10101: WARNING - Bad type annotation. Unknown type Array
     * @param {Array|Object} collection The collection to iterate over.
               ^

./6.js:10101: WARNING - Bad type annotation. Unknown type Object
     * @param {Array|Object} collection The collection to iterate over.
                     ^

./6.js:10102: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
               ^

./6.js:10103: WARNING - Bad type annotation. Unknown type Object
     * @returns {Object} Returns the composed aggregate object.
                 ^

./6.js:10113: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), (?|null)=): (?|null)
    var groupBy = createAggregator(function(result, value, key) {
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:10151: WARNING - optional arguments must be at the end
    function includes(collection, value, fromIndex, guard) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:10152: WARNING - actual parameter 1 of values does not match formal parameter
found   : (Object|null|string)
required: (Object|null)
      collection = isArrayLike(collection) ? collection : values(collection);
                                                                 ^^^^^^^^^^

./6.js:10160: WARNING - actual parameter 1 of collection.indexOf does not match formal parameter
found   : *
required: (null|string)
        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
                                                     ^^^^^

./6.js:10161: WARNING - actual parameter 1 of baseIndexOf does not match formal parameter
found   : (Object|string)
required: (Array|null)
        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
                                   ^^^^^^^^^^

./6.js:10174: WARNING - Bad type annotation. Unknown type Array
     * @param {Array|Object} collection The collection to iterate over.
               ^

./6.js:10174: WARNING - Bad type annotation. Unknown type Object
     * @param {Array|Object} collection The collection to iterate over.
                     ^

./6.js:10175: WARNING - Bad type annotation. Unknown type Array
     * @param {Array|Function|string} path The path of the method to invoke or
               ^

./6.js:10175: WARNING - Bad type annotation. Unknown type Function
     * @param {Array|Function|string} path The path of the method to invoke or
                     ^

./6.js:10178: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the array of results.
                 ^

./6.js:10187: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), (?|null|string), ...*): (?|null)
    var invokeMap = baseRest(function(collection, path, args) {
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:10208: WARNING - Bad type annotation. Unknown type Array
     * @param {Array|Object} collection The collection to iterate over.
               ^

./6.js:10208: WARNING - Bad type annotation. Unknown type Object
     * @param {Array|Object} collection The collection to iterate over.
                     ^

./6.js:10209: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
               ^

./6.js:10210: WARNING - Bad type annotation. Unknown type Object
     * @returns {Object} Returns the composed aggregate object.
                 ^

./6.js:10226: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), (?|null)=): (?|null)
    var keyBy = createAggregator(function(result, value, key) {
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:10274: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      return func(collection, getIteratee(iteratee, 3));
                              ^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:10288: WARNING - Bad type annotation. expected closing } See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
                    ^

./6.js:10288: WARNING - Bad type annotation. expecting a variable name in a @param tag. See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
                    ^

./6.js:10290: WARNING - Bad type annotation. expected closing } See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {string[]} [orders] The sort orders of `iteratees`.
                     ^

./6.js:10290: WARNING - Bad type annotation. expecting a variable name in a @param tag. See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {string[]} [orders] The sort orders of `iteratees`.
                     ^

./6.js:10330: WARNING - Bad type annotation. Unknown type Array
     * @param {Array|Object} collection The collection to iterate over.
               ^

./6.js:10330: WARNING - Bad type annotation. Unknown type Object
     * @param {Array|Object} collection The collection to iterate over.
                     ^

./6.js:10331: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
               ^

./6.js:10332: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the array of grouped elements.
                 ^

./6.js:10356: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), (?|null)=): (?|null)
    var partition = createAggregator(function(result, value, key) {
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:10401: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
                              ^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:10430: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
                              ^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:10469: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      return func(collection, negate(getIteratee(predicate, 3)));
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:10488: WARNING - actual parameter 1 of func does not match formal parameter
found   : (Object|null)
required: (Array|null)
      return func(collection);
                  ^^^^^^^^^^

./6.js:10511: WARNING - optional arguments must be at the end
    function sampleSize(collection, n, guard) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:10518: WARNING - actual parameter 1 of func does not match formal parameter
found   : (Object|null)
required: (Array|null)
      return func(collection, n);
                  ^^^^^^^^^^

./6.js:10538: WARNING - actual parameter 1 of func does not match formal parameter
found   : (Object|null)
required: (Array|null)
      return func(collection);
                  ^^^^^^^^^^

./6.js:10567: WARNING - actual parameter 1 of stringSize does not match formal parameter
found   : (Object|string)
required: string
        return isString(collection) ? stringSize(collection) : collection.length;
                                                 ^^^^^^^^^^

./6.js:10573: WARNING - actual parameter 1 of baseKeys does not match formal parameter
found   : (Object|string)
required: (Object|null)
      return baseKeys(collection).length;
                      ^^^^^^^^^^

./6.js:10612: WARNING - optional arguments must be at the end
    function some(collection, predicate, guard) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:10617: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      return func(collection, getIteratee(predicate, 3));
                              ^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:10630: WARNING - Bad type annotation. Unknown type Array
     * @param {Array|Object} collection The collection to iterate over.
               ^

./6.js:10630: WARNING - Bad type annotation. Unknown type Object
     * @param {Array|Object} collection The collection to iterate over.
                     ^

./6.js:10631: WARNING - Bad type annotation. missing closing ) See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
                                    ^

./6.js:10633: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the new sorted array.
                 ^

./6.js:10649: WARNING - initializing variable
found   : (Function|null)
required: function((?|null)): (?|null)
    var sortBy = baseRest(function(collection, iteratees) {
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:10739: WARNING - optional arguments must be at the end
    function ary(func, n, guard) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:10793: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} func The function to bind.
               ^

./6.js:10796: WARNING - Bad type annotation. Unknown type Function
     * @returns {Function} Returns the new bound function.
                 ^

./6.js:10814: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), *, ...*): (?|null)
    var bind = baseRest(function(func, thisArg, partials) {
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:10839: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} object The object to invoke the method on.
               ^

./6.js:10842: WARNING - Bad type annotation. Unknown type Function
     * @returns {Function} Returns the new bound function.
                 ^

./6.js:10868: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), string, ...*): (?|null)
    var bindKey = baseRest(function(object, key, partials) {
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:10918: WARNING - optional arguments must be at the end
    function curry(func, arity, guard) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:10963: WARNING - optional arguments must be at the end
    function curryRight(func, arity, guard) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:10997: WARNING - Bad type annotation. missing closing ] See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {Object} [options={}] The options object.
                                ^

./6.js:11024: WARNING - optional arguments must be at the end
    function debounce(func, wait, options) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:11061: WARNING - actual parameter 2 of setTimeout does not match formal parameter
found   : (number|undefined)
required: number
        timerId = setTimeout(timerExpired, wait);
                                           ^^^^

./6.js:11134: WARNING - actual parameter 2 of setTimeout does not match formal parameter
found   : (number|undefined)
required: number
            timerId = setTimeout(timerExpired, wait);
                                               ^^^^

./6.js:11139: WARNING - actual parameter 2 of setTimeout does not match formal parameter
found   : (number|undefined)
required: number
          timerId = setTimeout(timerExpired, wait);
                                             ^^^^

./6.js:11156: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} func The function to defer.
               ^

./6.js:11166: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), ...*): number
    var defer = baseRest(function(func, args) {
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:11178: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} func The function to delay.
               ^

./6.js:11189: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), number, ...*): number
    var delay = baseRest(function(func, wait, args) {
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:11347: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} func The function to wrap.
               ^

./6.js:11348: WARNING - Bad type annotation. missing closing ) See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {...(Function|Function[])} [transforms=[_.identity]]
                                    ^

./6.js:11350: WARNING - Bad type annotation. Unknown type Function
     * @returns {Function} Returns the new function.
                 ^

./6.js:11373: WARNING - Function arrayMap: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
        ? arrayMap(transforms[0], baseUnary(getIteratee()))
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:11374: WARNING - Function arrayMap: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:11403: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} func The function to partially apply arguments to.
               ^

./6.js:11405: WARNING - Bad type annotation. Unknown type Function
     * @returns {Function} Returns the new partially applied function.
                 ^

./6.js:11421: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), ...*): (?|null)
    var partial = baseRest(function(func, partials) {
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:11440: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} func The function to partially apply arguments to.
               ^

./6.js:11442: WARNING - Bad type annotation. Unknown type Function
     * @returns {Function} Returns the new partially applied function.
                 ^

./6.js:11458: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), ...*): (?|null)
    var partialRight = baseRest(function(func, partials) {
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:11473: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} func The function to rearrange arguments for.
               ^

./6.js:11474: WARNING - Bad type annotation. missing closing ) See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {...(number|number[])} indexes The arranged argument indexes.
                                ^

./6.js:11475: WARNING - Bad type annotation. Unknown type Function
     * @returns {Function} Returns the new function.
                 ^

./6.js:11485: WARNING - initializing variable
found   : (Function|null)
required: function((?|null)): (?|null)
    var rearg = flatRest(function(func, indexes) {
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:11598: WARNING - Bad type annotation. missing closing ] See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {Object} [options={}] The options object.
                                ^

./6.js:11616: WARNING - optional arguments must be at the end
    function throttle(func, wait, options) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:11627: WARNING - Function debounce: called with 3 argument(s). Function requires at least 1 argument(s) and no more than 2 argument(s).
      return debounce(func, wait, {
             ^^^^^^^^^^^^^^^^^^^^^^

./6.js:11714: WARNING - parameter value does not appear in castArray's parameter list
    function castArray() {
    ^^^^^^^^^^^^^^^^^^^^^^

./6.js:11749: WARNING - actual parameter 2 of baseClone does not match formal parameter
found   : number
required: boolean
      return baseClone(value, CLONE_SYMBOLS_FLAG);
                              ^^^^^^^^^^^^^^^^^^

./6.js:11785: WARNING - actual parameter 2 of baseClone does not match formal parameter
found   : number
required: boolean
      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
                              ^^^^^^^^^^^^^^^^^^

./6.js:11807: WARNING - actual parameter 2 of baseClone does not match formal parameter
found   : number
required: boolean
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:11840: WARNING - actual parameter 2 of baseClone does not match formal parameter
found   : number
required: boolean
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:11930: WARNING - initializing variable
found   : (Function|null)
required: function(*, *): boolean
    var gt = createRelationalOperation(baseGt);
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:11955: WARNING - initializing variable
found   : (Function|null)
required: function(*, *): boolean
    var gte = createRelationalOperation(function(value, other) {
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:12024: WARNING - initializing variable
found   : (Function|null)
required: function(*): boolean
    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:12142: WARNING - initializing variable
found   : (Function|null)
required: function(*): boolean
    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:12212: WARNING - actual parameter 1 of baseKeys does not match formal parameter
found   : *
required: (Object|null)
        return !baseKeys(value).length;
                         ^^^^^

./6.js:12251: WARNING - Function baseIsEqual: called with 2 argument(s). Function requires at least 3 argument(s) and no more than 5 argument(s).
      return baseIsEqual(value, other);
             ^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:12512: WARNING - initializing variable
found   : (Function|null)
required: function(*): boolean
    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:12785: WARNING - initializing variable
found   : (Function|null)
required: function(*): boolean
    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:12815: WARNING - left side of numeric comparison
found   : *
required: number
      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
                                 ^^^^^

./6.js:12835: WARNING - initializing variable
found   : (Function|null)
required: function(*): boolean
    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:12898: WARNING - initializing variable
found   : (Function|null)
required: function(*): boolean
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:12986: WARNING - initializing variable
found   : (Function|null)
required: function(*, *): boolean
    var lt = createRelationalOperation(baseLt);
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:13011: WARNING - initializing variable
found   : (Function|null)
required: function(*, *): boolean
    var lte = createRelationalOperation(function(value, other) {
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:13043: WARNING - actual parameter 1 of stringToArray does not match formal parameter
found   : *
required: string
        return isString(value) ? stringToArray(value) : copyArray(value);
                                               ^^^^^

./6.js:13043: WARNING - Function copyArray: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
        return isString(value) ? stringToArray(value) : copyArray(value);
                                                        ^^^^^^^^^^^^^^^^

./6.js:13043: WARNING - actual parameter 1 of copyArray does not match formal parameter
found   : *
required: (Array|null)
        return isString(value) ? stringToArray(value) : copyArray(value);
                                                                  ^^^^^

./6.js:13051: WARNING - actual parameter 1 of func does not match formal parameter
found   : *
required: (Object|null)
      return func(value);
                  ^^^^^

./6.js:13150: WARNING - Function baseClamp: called with 3 argument(s). Function requires at least 1 argument(s) and no more than 2 argument(s).
      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:13222: WARNING - Function copyObject: called with 2 argument(s). Function requires at least 3 argument(s) and no more than 4 argument(s).
      return copyObject(value, keysIn(value));
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:13222: WARNING - actual parameter 1 of copyObject does not match formal parameter
found   : *
required: (Object|null)
      return copyObject(value, keysIn(value));
                        ^^^^^

./6.js:13222: WARNING - actual parameter 1 of keysIn does not match formal parameter
found   : *
required: (Object|null)
      return copyObject(value, keysIn(value));
                                      ^^^^^

./6.js:13251: WARNING - Function baseClamp: called with 3 argument(s). Function requires at least 1 argument(s) and no more than 2 argument(s).
        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:13294: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} object The destination object.
               ^

./6.js:13295: WARNING - Bad type annotation. Unknown type Object
     * @param {...Object} [sources] The source objects.
                  ^

./6.js:13296: WARNING - Bad type annotation. Unknown type Object
     * @returns {Object} Returns `object`.
                 ^

./6.js:13314: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), ...(?|null)): (?|null)
    var assign = createAssigner(function(object, source) {
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:13337: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} object The destination object.
               ^

./6.js:13338: WARNING - Bad type annotation. Unknown type Object
     * @param {...Object} [sources] The source objects.
                  ^

./6.js:13339: WARNING - Bad type annotation. Unknown type Object
     * @returns {Object} Returns `object`.
                 ^

./6.js:13357: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), ...(?|null)): (?|null)
    var assignIn = createAssigner(function(object, source) {
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:13374: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} object The destination object.
               ^

./6.js:13375: WARNING - Bad type annotation. Unknown type Object
     * @param {...Object} sources The source objects.
                  ^

./6.js:13376: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} [customizer] The function to customize assigned values.
               ^

./6.js:13377: WARNING - Bad type annotation. Unknown type Object
     * @returns {Object} Returns `object`.
                 ^

./6.js:13390: WARNING - variable length argument must be last
    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:13390: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), ...(?|null)): (?|null)
    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:13406: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} object The destination object.
               ^

./6.js:13407: WARNING - Bad type annotation. Unknown type Object
     * @param {...Object} sources The source objects.
                  ^

./6.js:13408: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} [customizer] The function to customize assigned values.
               ^

./6.js:13409: WARNING - Bad type annotation. Unknown type Object
     * @returns {Object} Returns `object`.
                 ^

./6.js:13422: WARNING - variable length argument must be last
    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:13422: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), ...(?|null)): (?|null)
    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:13433: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} object The object to iterate over.
               ^

./6.js:13434: WARNING - Bad type annotation. missing closing ) See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {...(string|string[])} [paths] The property paths to pick.
                                ^

./6.js:13435: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the picked values.
                 ^

./6.js:13443: WARNING - initializing variable
found   : (Function|null)
required: function((?|null)): (?|null)
    var at = flatRest(baseAt);
             ^^^^^^^^^^^^^^^^

./6.js:13496: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} object The destination object.
               ^

./6.js:13497: WARNING - Bad type annotation. Unknown type Object
     * @param {...Object} [sources] The source objects.
                  ^

./6.js:13498: WARNING - Bad type annotation. Unknown type Object
     * @returns {Object} Returns `object`.
                 ^

./6.js:13505: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), ...(?|null)): (?|null)
    var defaults = baseRest(function(object, sources) {
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:13546: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} object The destination object.
               ^

./6.js:13547: WARNING - Bad type annotation. Unknown type Object
     * @param {...Object} [sources] The source objects.
                  ^

./6.js:13548: WARNING - Bad type annotation. Unknown type Object
     * @returns {Object} Returns `object`.
                 ^

./6.js:13555: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), ...(?|null)): (?|null)
    var defaultsDeep = baseRest(function(args) {
                       ^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:13596: WARNING - inconsistent return type
found   : *
required: (string|undefined)
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:13596: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:13635: WARNING - inconsistent return type
found   : *
required: (string|undefined)
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:13635: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:13669: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
        : baseFor(object, getIteratee(iteratee, 3), keysIn);
                          ^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:13701: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
        : baseForRight(object, getIteratee(iteratee, 3), keysIn);
                               ^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:13733: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      return object && baseForOwn(object, getIteratee(iteratee, 3));
                                          ^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:13763: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      return object && baseForOwnRight(object, getIteratee(iteratee, 3));
                                               ^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:13920: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} object The object to invert.
               ^

./6.js:13921: WARNING - Bad type annotation. Unknown type Object
     * @returns {Object} Returns the new inverted object.
                 ^

./6.js:13929: WARNING - initializing variable
found   : (Function|null)
required: function((?|null)): (?|null)
    var invert = createInverter(function(result, value, key) {
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:13949: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} object The object to invert.
               ^

./6.js:13950: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
               ^

./6.js:13951: WARNING - Bad type annotation. Unknown type Object
     * @returns {Object} Returns the new inverted object.
                 ^

./6.js:13964: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), (?|null)=): (?|null)
    var invertBy = createInverter(function(result, value, key) {
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:13984: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} object The object to query.
               ^

./6.js:13985: WARNING - Bad type annotation. Unknown type Array
     * @param {Array|string} path The path of the method to invoke.
               ^

./6.js:13995: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), (?|null|string), ...*): *
    var invoke = baseRest(baseInvoke);
                 ^^^^^^^^^^^^^^^^^^^^

./6.js:14026: WARNING - Function arrayLikeKeys: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
                                   ^^^^^^^^^^^^^^^^^^^^^

./6.js:14079: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      iteratee = getIteratee(iteratee, 3);
                 ^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:14117: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      iteratee = getIteratee(iteratee, 3);
                 ^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:14140: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} object The destination object.
               ^

./6.js:14141: WARNING - Bad type annotation. Unknown type Object
     * @param {...Object} [sources] The source objects.
                  ^

./6.js:14142: WARNING - Bad type annotation. Unknown type Object
     * @returns {Object} Returns `object`.
                 ^

./6.js:14156: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), ...(?|null)): (?|null)
    var merge = createAssigner(function(object, source, srcIndex) {
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:14173: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} object The destination object.
               ^

./6.js:14174: WARNING - Bad type annotation. Unknown type Object
     * @param {...Object} sources The source objects.
                  ^

./6.js:14175: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} customizer The function to customize assigned values.
               ^

./6.js:14176: WARNING - Bad type annotation. Unknown type Object
     * @returns {Object} Returns `object`.
                 ^

./6.js:14191: WARNING - variable length argument must be last
    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:14191: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), ...(?|null)): (?|null)
    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:14205: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} object The source object.
               ^

./6.js:14206: WARNING - Bad type annotation. missing closing ) See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {...(string|string[])} [paths] The property paths to omit.
                                ^

./6.js:14207: WARNING - Bad type annotation. Unknown type Object
     * @returns {Object} Returns the new object.
                 ^

./6.js:14215: WARNING - initializing variable
found   : (Function|null)
required: function((?|null)): (?|null)
    var omit = flatRest(function(object, paths) {
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:14221: WARNING - Function arrayMap: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
      paths = arrayMap(paths, function(path) {
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:14228: WARNING - actual parameter 2 of baseClone does not match formal parameter
found   : number
required: boolean
        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:14232: WARNING - actual parameter 1 of baseUnset does not match formal parameter
found   : *
required: (Object|null)
        baseUnset(result, paths[length]);
                  ^^^^^^

./6.js:14258: WARNING - Function getIteratee: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      return pickBy(object, negate(getIteratee(predicate)));
                                   ^^^^^^^^^^^^^^^^^^^^^^

./6.js:14268: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} object The source object.
               ^

./6.js:14269: WARNING - Bad type annotation. missing closing ) See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {...(string|string[])} [paths] The property paths to pick.
                                ^

./6.js:14270: WARNING - Bad type annotation. Unknown type Object
     * @returns {Object} Returns the new object.
                 ^

./6.js:14278: WARNING - initializing variable
found   : (Function|null)
required: function((?|null)): (?|null)
    var pick = flatRest(function(object, paths) {
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:14304: WARNING - Function arrayMap: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
      var props = arrayMap(getAllKeysIn(object), function(prop) {
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:14307: WARNING - Function getIteratee: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      predicate = getIteratee(predicate);
                  ^^^^^^^^^^^^^^^^^^^^^^

./6.js:14359: WARNING - assignment
found   : *
required: (Object|null)
        object = isFunction(value) ? value.call(object) : value;
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:14435: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} object The object to query.
               ^

./6.js:14436: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the key-value pairs.
                 ^

./6.js:14449: WARNING - initializing variable
found   : (Function|null)
required: function((?|null)): (?|null)
    var toPairs = createToPairs(keys);
                  ^^^^^^^^^^^^^^^^^^^

./6.js:14461: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} object The object to query.
               ^

./6.js:14462: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the key-value pairs.
                 ^

./6.js:14475: WARNING - initializing variable
found   : (Function|null)
required: function((?|null)): (?|null)
    var toPairsIn = createToPairs(keysIn);
                    ^^^^^^^^^^^^^^^^^^^^^

./6.js:14511: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      iteratee = getIteratee(iteratee, 4);
                 ^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:14648: WARNING - inconsistent return type
found   : (Object|null)
required: (Array|null)
      return object == null ? [] : baseValues(object, keys(object));
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:14676: WARNING - inconsistent return type
found   : (Object|null)
required: (Array|null)
      return object == null ? [] : baseValues(object, keysIn(object));
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:14700: WARNING - optional arguments must be at the end
    function clamp(number, lower, upper) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:14713: WARNING - Function baseClamp: called with 3 argument(s). Function requires at least 1 argument(s) and no more than 2 argument(s).
      return baseClamp(toNumber(number), lower, upper);
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:14754: WARNING - optional arguments must be at the end
    function inRange(number, start, end) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:14807: WARNING - assignment
found   : (number|undefined)
required: (boolean|undefined)
          floating = lower;
          ^^^^^^^^^^^^^^^^

./6.js:14858: WARNING - initializing variable
found   : (Function|null)
required: function(string=): string
    var camelCase = createCompounder(function(result, word, index) {
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:14935: WARNING - Function baseClamp: called with 3 argument(s). Function requires at least 1 argument(s) and no more than 2 argument(s).
        : baseClamp(toInteger(position), 0, length);
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:15020: WARNING - initializing variable
found   : (Function|null)
required: function(string=): string
    var kebabCase = createCompounder(function(result, word, index) {
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:15044: WARNING - initializing variable
found   : (Function|null)
required: function(string=): string
    var lowerCase = createCompounder(function(result, word, index) {
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:15065: WARNING - initializing variable
found   : (Function|null)
required: function(string=): string
    var lowerFirst = createCaseFirst('toLowerCase');
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:15077: WARNING - Bad type annotation. missing closing ] See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {string} [chars=' '] The string used as padding.
                                ^

./6.js:15090: WARNING - optional arguments must be at the end
    function pad(string, length, chars) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:15116: WARNING - Bad type annotation. missing closing ] See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {string} [chars=' '] The string used as padding.
                                ^

./6.js:15129: WARNING - optional arguments must be at the end
    function padEnd(string, length, chars) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:15149: WARNING - Bad type annotation. missing closing ] See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {string} [chars=' '] The string used as padding.
                                ^

./6.js:15162: WARNING - optional arguments must be at the end
    function padStart(string, length, chars) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:15196: WARNING - optional arguments must be at the end
    function parseInt(string, radix, guard) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:15227: WARNING - optional arguments must be at the end
    function repeat(string, n, guard) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:15255: WARNING - parameter pattern does not appear in replace's parameter list
    function replace() {
    ^^^^^^^^^^^^^^^^^^^^

./6.js:15255: WARNING - parameter replacement does not appear in replace's parameter list
    function replace() {
    ^^^^^^^^^^^^^^^^^^^^

./6.js:15255: WARNING - parameter string does not appear in replace's parameter list
    function replace() {
    ^^^^^^^^^^^^^^^^^^^^

./6.js:15283: WARNING - initializing variable
found   : (Function|null)
required: function(string=): string
    var snakeCase = createCompounder(function(result, word, index) {
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:15306: WARNING - optional arguments must be at the end
    function split(string, separator, limit) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:15319: WARNING - assignment
found   : string
required: (number|undefined)
        separator = baseToString(separator);
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:15348: WARNING - initializing variable
found   : (Function|null)
required: function(string=): string
    var startCase = createCompounder(function(result, word, index) {
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:15379: WARNING - Function baseClamp: called with 3 argument(s). Function requires at least 1 argument(s) and no more than 2 argument(s).
        : baseClamp(toInteger(position), 0, string.length);
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:15407: WARNING - Bad type annotation. missing closing ] See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {Object} [options={}] The options object.
                                ^

./6.js:15416: WARNING - Bad type annotation. missing closing ] See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {string} [options.sourceURL='lodash.templateSources[n]']
                                                                 ^

./6.js:15489: WARNING - optional arguments must be at the end
    function template(string, options, guard) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:15594: WARNING - inconsistent return type
found   : *
required: (Function|null)
      return result;
             ^^^^^^

./6.js:15618: WARNING - parameter string does not appear in toLower's parameter list
    function toLower(value) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:15643: WARNING - parameter string does not appear in toUpper's parameter list
    function toUpper(value) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:15669: WARNING - optional arguments must be at the end
    function trim(string, chars, guard) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:15704: WARNING - optional arguments must be at the end
    function trimEnd(string, chars, guard) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:15737: WARNING - optional arguments must be at the end
    function trimStart(string, chars, guard) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:15761: WARNING - Bad type annotation. missing closing ] See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {Object} [options={}] The options object.
                                ^

./6.js:15788: WARNING - optional arguments must be at the end
    function truncate(string, options) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:15793: WARNING - Variable referenced before declaration: separator
        var separator = 'separator' in options ? options.separator : separator;
                                                                     ^^^^^^^^^

./6.js:15890: WARNING - initializing variable
found   : (Function|null)
required: function(string=): string
    var upperCase = createCompounder(function(result, word, index) {
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:15911: WARNING - initializing variable
found   : (Function|null)
required: function(string=): string
    var upperFirst = createCaseFirst('toUpperCase');
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:15932: WARNING - optional arguments must be at the end
    function words(string, pattern, guard) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:15952: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} func The function to attempt.
               ^

./6.js:15966: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), ...*): *
    var attempt = baseRest(function(func, args) {
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:15984: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} object The object to bind and assign the bound methods to.
               ^

./6.js:15985: WARNING - Bad type annotation. missing closing ) See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {...(string|string[])} methodNames The object method names to bind.
                                ^

./6.js:15986: WARNING - Bad type annotation. Unknown type Object
     * @returns {Object} Returns `object`.
                 ^

./6.js:16000: WARNING - initializing variable
found   : (Function|null)
required: function((?|null)): (?|null)
    var bindAll = flatRest(function(object, methodNames) {
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:16001: WARNING - Function arrayEach: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
      arrayEach(methodNames, function(key) {
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:16003: WARNING - actual parameter 2 of baseAssignValue does not match formal parameter
found   : (string|symbol)
required: string
        baseAssignValue(object, key, bind(object[key], object));
                                ^^^

./6.js:16041: WARNING - Function arrayMap: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
      pairs = !length ? [] : arrayMap(pairs, function(pair) {
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:16084: WARNING - actual parameter 1 of baseConforms does not match formal parameter
found   : *
required: (Object|null)
      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:16084: WARNING - actual parameter 2 of baseClone does not match formal parameter
found   : number
required: boolean
      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
                                            ^^^^^^^^^^^^^^^

./6.js:16145: WARNING - Bad type annotation. missing closing ) See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
                                    ^

./6.js:16146: WARNING - Bad type annotation. Unknown type Function
     * @returns {Function} Returns the new composite function.
                 ^

./6.js:16158: WARNING - initializing variable
found   : (Function|null)
required: function(): (?|null)
    var flow = createFlow();
               ^^^^^^^^^^^^

./6.js:16168: WARNING - Bad type annotation. missing closing ) See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
                                    ^

./6.js:16169: WARNING - Bad type annotation. Unknown type Function
     * @returns {Function} Returns the new composite function.
                 ^

./6.js:16181: WARNING - initializing variable
found   : (Function|null)
required: function(): (?|null)
    var flowRight = createFlow(true);
                    ^^^^^^^^^^^^^^^^

./6.js:16246: WARNING - actual parameter 2 of baseClone does not match formal parameter
found   : number
required: boolean
      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
                                                                             ^^^^^^^^^^^^^^^

./6.js:16278: WARNING - actual parameter 1 of baseMatches does not match formal parameter
found   : *
required: (Object|null)
      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:16278: WARNING - actual parameter 2 of baseClone does not match formal parameter
found   : number
required: boolean
      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
                                           ^^^^^^^^^^^^^^^

./6.js:16308: WARNING - actual parameter 1 of baseMatchesProperty does not match formal parameter
found   : (Array|null|string)
required: string
      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
                                 ^^^^

./6.js:16308: WARNING - actual parameter 2 of baseClone does not match formal parameter
found   : number
required: boolean
      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
                                                           ^^^^^^^^^^^^^^^

./6.js:16319: WARNING - Bad type annotation. Unknown type Array
     * @param {Array|string} path The path of the method to invoke.
               ^

./6.js:16321: WARNING - Bad type annotation. Unknown type Function
     * @returns {Function} Returns the new invoker function.
                 ^

./6.js:16335: WARNING - initializing variable
found   : (Function|null)
required: function((?|null|string), ...*): (?|null)
    var method = baseRest(function(path, args) {
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:16350: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} object The object to query.
               ^

./6.js:16352: WARNING - Bad type annotation. Unknown type Function
     * @returns {Function} Returns the new invoker function.
                 ^

./6.js:16364: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), ...*): (?|null)
    var methodOf = baseRest(function(object, args) {
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:16384: WARNING - Bad type annotation. missing closing ] See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {Object} [options={}] The options object.
                                ^

./6.js:16406: WARNING - optional arguments must be at the end
    function mixin(object, source, options) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:16415: WARNING - actual parameter 1 of baseFunctions does not match formal parameter
found   : (Object|null|undefined)
required: (Object|null)
        methodNames = baseFunctions(source, keys(source));
                                    ^^^^^^

./6.js:16415: WARNING - actual parameter 1 of keys does not match formal parameter
found   : (Object|null|undefined)
required: (Object|null)
        methodNames = baseFunctions(source, keys(source));
                                                 ^^^^^^

./6.js:16420: WARNING - Function arrayEach: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
      arrayEach(methodNames, function(methodName) {
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:16427: WARNING - Object expressions are not callable
              var result = object(this.__wrapped__),
                           ^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:16428: WARNING - Function copyArray: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
                  actions = result.__actions__ = copyArray(this.__actions__);
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:16434: WARNING - actual parameter 2 of arrayPush does not match formal parameter
found   : Arguments
required: (Array|null)
            return func.apply(object, arrayPush([this.value()], arguments));
                                                                ^^^^^^^^^

./6.js:16501: WARNING - actual parameter 2 of baseNth does not match formal parameter
found   : (number|undefined)
required: number
        return baseNth(args, n);
                             ^

./6.js:16513: WARNING - Bad type annotation. missing closing ) See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
                                    ^

./6.js:16515: WARNING - Bad type annotation. Unknown type Function
     * @returns {Function} Returns the new function.
                 ^

./6.js:16523: WARNING - initializing variable
found   : (Function|null)
required: function(): (?|null)
    var over = createOver(arrayMap);
               ^^^^^^^^^^^^^^^^^^^^

./6.js:16533: WARNING - Bad type annotation. missing closing ) See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {...(Function|Function[])} [predicates=[_.identity]]
                                    ^

./6.js:16535: WARNING - Bad type annotation. Unknown type Function
     * @returns {Function} Returns the new function.
                 ^

./6.js:16549: WARNING - initializing variable
found   : (Function|null)
required: function(): (?|null)
    var overEvery = createOver(arrayEvery);
                    ^^^^^^^^^^^^^^^^^^^^^^

./6.js:16559: WARNING - Bad type annotation. missing closing ) See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {...(Function|Function[])} [predicates=[_.identity]]
                                    ^

./6.js:16561: WARNING - Bad type annotation. Unknown type Function
     * @returns {Function} Returns the new function.
                 ^

./6.js:16575: WARNING - initializing variable
found   : (Function|null)
required: function(): (?|null)
    var overSome = createOver(arraySome);
                   ^^^^^^^^^^^^^^^^^^^^^

./6.js:16600: WARNING - actual parameter 1 of baseProperty does not match formal parameter
found   : (string|symbol)
required: string
      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
                                        ^^^^^^^^^^^

./6.js:16646: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the range of numbers.
                 ^

./6.js:16671: WARNING - optional arguments must be at the end
    var range = createRange();
        ^^^^^^^^^^^^^^^^^^^^^

./6.js:16671: WARNING - initializing variable
found   : (Function|null)
required: function(number=, number=): (?|null)
    var range = createRange();
                ^^^^^^^^^^^^^

./6.js:16684: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the range of numbers.
                 ^

./6.js:16709: WARNING - optional arguments must be at the end
    var rangeRight = createRange(true);
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:16709: WARNING - initializing variable
found   : (Function|null)
required: function(number=, number=): (?|null)
    var rangeRight = createRange(true);
                     ^^^^^^^^^^^^^^^^^

./6.js:16833: WARNING - Function getIteratee: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      iteratee = getIteratee(iteratee);
                 ^^^^^^^^^^^^^^^^^^^^^

./6.js:16862: WARNING - Function arrayMap: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
        return arrayMap(value, toKey);
               ^^^^^^^^^^^^^^^^^^^^^^

./6.js:16862: WARNING - actual parameter 1 of arrayMap does not match formal parameter
found   : *
required: (Array|null|undefined)
        return arrayMap(value, toKey);
                        ^^^^^

./6.js:16864: WARNING - Function copyArray: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:16906: WARNING - initializing variable
found   : (Function|null)
required: function(number, number): number
    var add = createMathOperation(function(augend, addend) {
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:16931: WARNING - initializing variable
found   : (Function|null)
required: function(number, number=): number
    var ceil = createRound('ceil');
               ^^^^^^^^^^^^^^^^^^^

./6.js:16948: WARNING - initializing variable
found   : (Function|null)
required: function(number, number): number
    var divide = createMathOperation(function(dividend, divisor) {
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:16973: WARNING - initializing variable
found   : (Function|null)
required: function(number, number=): number
    var floor = createRound('floor');
                ^^^^^^^^^^^^^^^^^^^^

./6.js:17024: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)
                              ^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:17070: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      return baseMean(array, getIteratee(iteratee, 2));
                             ^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:17122: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)
                              ^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:17141: WARNING - initializing variable
found   : (Function|null)
required: function(number, number): number
    var multiply = createMathOperation(function(multiplier, multiplicand) {
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:17166: WARNING - initializing variable
found   : (Function|null)
required: function(number, number=): number
    var round = createRound('round');
                ^^^^^^^^^^^^^^^^^^^^

./6.js:17183: WARNING - initializing variable
found   : (Function|null)
required: function(number, number): number
    var subtract = createMathOperation(function(minuend, subtrahend) {
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:17232: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
        ? baseSum(array, getIteratee(iteratee, 2))
                         ^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:17247: WARNING - assignment to property bind of lodash
found   : function((?|null), *, ...*): (?|null)
required: function((lodash|null|undefined), *=): function(...?): (Object|null)
    lodash.bind = bind;
    ^^^^^^^^^^^^^^^^^^

./6.js:17396: WARNING - Function mixin: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
    mixin(lodash, lodash);
    ^^^^^^^^^^^^^^^^^^^^^

./6.js:17540: WARNING - assignment to property toString of lodash
found   : function(*): string
required: function(this:Function): string
    lodash.toString = toString;
    ^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:17556: WARNING - Function mixin: called with 3 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
    mixin(lodash, (function() {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:17578: WARNING - Function arrayEach: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:17583: WARNING - Function arrayEach: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
    arrayEach(['drop', 'take'], function(methodName, index) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:17608: WARNING - Function arrayEach: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:17615: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
          'iteratee': getIteratee(iteratee, 3),
                      ^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:17624: WARNING - Function arrayEach: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
    arrayEach(['head', 'last'], function(methodName, index) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:17633: WARNING - Function arrayEach: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
    arrayEach(['initial', 'tail'], function(methodName, index) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:17663: WARNING - Function getIteratee: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      return this.filter(negate(getIteratee(predicate)));
                                ^^^^^^^^^^^^^^^^^^^^^^

./6.js:17711: WARNING - actual parameter 2 of arrayPush does not match formal parameter
found   : (Arguments|Array)
required: (Array|null)
          var result = lodashFunc.apply(lodash, arrayPush([value], args));
                                                                   ^^^^

./6.js:17728: WARNING - cannot instantiate non-constructor
          return new LodashWrapper(result, chainAll);
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:17739: WARNING - Function arrayEach: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./entry.js:3: WARNING - Property has never defined on module$lodash
let a = _.has([], []);
          ^^^

./lodash.js:21: WARNING - declaration of multiple variables with shared type information
  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:34: WARNING - declaration of multiple variables with shared type information
  var CLONE_DEEP_FLAG = 1,
  ^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:39: WARNING - declaration of multiple variables with shared type information
  var COMPARE_PARTIAL_FLAG = 1,
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:43: WARNING - declaration of multiple variables with shared type information
  var WRAP_BIND_FLAG = 1,
  ^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:55: WARNING - declaration of multiple variables with shared type information
  var DEFAULT_TRUNC_LENGTH = 30,
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:59: WARNING - declaration of multiple variables with shared type information
  var HOT_COUNT = 800,
  ^^^^^^^^^^^^^^^^^^^^

./lodash.js:63: WARNING - declaration of multiple variables with shared type information
  var LAZY_FILTER_FLAG = 1,
  ^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:68: WARNING - declaration of multiple variables with shared type information
  var INFINITY = 1 / 0,
  ^^^^^^^^^^^^^^^^^^^^^

./lodash.js:74: WARNING - declaration of multiple variables with shared type information
  var MAX_ARRAY_LENGTH = 4294967295,
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:92: WARNING - declaration of multiple variables with shared type information
  var argsTag = '[object Arguments]',
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:128: WARNING - declaration of multiple variables with shared type information
  var reEmptyStringLeading = /\b__p \+= '';/g,
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:133: WARNING - declaration of multiple variables with shared type information
  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:139: WARNING - declaration of multiple variables with shared type information
  var reEscape = /<%-([\s\S]+?)%>/g,
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:144: WARNING - declaration of multiple variables with shared type information
  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:152: WARNING - declaration of multiple variables with shared type information
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:156: WARNING - declaration of multiple variables with shared type information
  var reTrim = /^\s+|\s+$/g,
  ^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:161: WARNING - declaration of multiple variables with shared type information
  var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:205: WARNING - declaration of multiple variables with shared type information
  var rsAstralRange = '\\ud800-\\udfff',
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:221: WARNING - declaration of multiple variables with shared type information
  var rsApos = "['\u2019]",
  ^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:238: WARNING - declaration of multiple variables with shared type information
  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:412: WARNING - declaration of multiple variables with shared type information
  var freeParseFloat = parseFloat,
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:491: WARNING - optional arguments must be at the end
  function arrayAggregator(array, setter, iteratee, accumulator) {
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:511: WARNING - optional arguments must be at the end
  function arrayEach(array, iteratee) {
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:520: WARNING - inconsistent return type
found   : (Array|null|undefined)
required: (Array|null)
    return array;
           ^^^^^

./lodash.js:532: WARNING - optional arguments must be at the end
  function arrayEachRight(array, iteratee) {
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:540: WARNING - inconsistent return type
found   : (Array|null|undefined)
required: (Array|null)
    return array;
           ^^^^^

./lodash.js:553: WARNING - optional arguments must be at the end
  function arrayEvery(array, predicate) {
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:574: WARNING - optional arguments must be at the end
  function arrayFilter(array, predicate) {
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:598: WARNING - optional arguments must be at the end
  function arrayIncludes(array, value) {
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:598: WARNING - parameter target does not appear in arrayIncludes's parameter list
  function arrayIncludes(array, value) {
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:600: WARNING - actual parameter 1 of baseIndexOf does not match formal parameter
found   : (Array|null|undefined)
required: (Array|null)
    return !!length && baseIndexOf(array, value, 0) > -1;
                                   ^^^^^

./lodash.js:612: WARNING - optional arguments must be at the end
  function arrayIncludesWith(array, value, comparator) {
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:612: WARNING - parameter target does not appear in arrayIncludesWith's parameter list
  function arrayIncludesWith(array, value, comparator) {
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:633: WARNING - optional arguments must be at the end
  function arrayMap(array, iteratee) {
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:675: WARNING - optional arguments must be at the end
  function arrayReduce(array, iteratee, accumulator, initAccum) {
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:683: WARNING - * expressions are not callable
      accumulator = iteratee(accumulator, array[index], index, array);
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:700: WARNING - optional arguments must be at the end
  function arrayReduceRight(array, iteratee, accumulator, initAccum) {
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:706: WARNING - * expressions are not callable
      accumulator = iteratee(accumulator, array[length], length, array);
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:721: WARNING - optional arguments must be at the end
  function arraySome(array, predicate) {
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:740: WARNING - initializing variable
found   : (Function|null)
required: function(string): number
  var asciiSize = baseProperty('length');
                  ^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:760: WARNING - parameter The does not appear in asciiWords's parameter list
  function asciiWords(string) {
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:932: WARNING - actual parameter 1 of Array.prototype.sort does not match formal parameter
found   : (Function|null)
required: (function(?, ?): number|undefined)
    array.sort(comparer);
               ^^^^^^^^

./lodash.js:991: WARNING - Function arrayMap: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
    return arrayMap(props, function(key) {
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:1020: WARNING - Function arrayMap: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
    return arrayMap(props, function(key) {
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:1098: WARNING - initializing variable
found   : (Function|null)
required: function(string): string
  var deburrLetter = basePropertyOf(deburredLetters);
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:1107: WARNING - initializing variable
found   : (Function|null)
required: function(string): string
  var escapeHtmlChar = basePropertyOf(htmlEscapes);
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:1128: WARNING - optional arguments must be at the end
  function getValue(object, key) {
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:1336: WARNING - initializing variable
found   : (Function|null)
required: function(string): string
  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:1371: WARNING - parameter The does not appear in unicodeWords's parameter list
  function unicodeWords(string) {
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:1410: WARNING - declaration of multiple variables with shared type information
    var Array = context.Array,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:1421: WARNING - declaration of multiple variables with shared type information
    var arrayProto = Array.prototype,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:1463: WARNING - declaration of multiple variables with shared type information
    var Buffer = moduleExports ? context.Buffer : undefined,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:1478: WARNING - * expressions are not callable
        func({}, '', {});
        ^^^^^^^^^^^^^^^^

./lodash.js:1484: WARNING - declaration of multiple variables with shared type information
    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:1512: WARNING - cannot instantiate non-constructor
    var metaMap = WeakMap && new WeakMap;
                             ^^^^^^^^^^^

./lodash.js:1518: WARNING - declaration of multiple variables with shared type information
    var dataViewCtorString = toSource(DataView),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:1518: WARNING - actual parameter 1 of toSource does not match formal parameter
found   : *
required: (Function|null)
    var dataViewCtorString = toSource(DataView),
                                      ^^^^^^^^

./lodash.js:1519: WARNING - actual parameter 1 of toSource does not match formal parameter
found   : *
required: (Function|null)
        mapCtorString = toSource(Map),
                                 ^^^

./lodash.js:1520: WARNING - actual parameter 1 of toSource does not match formal parameter
found   : *
required: (Function|null)
        promiseCtorString = toSource(Promise),
                                     ^^^^^^^

./lodash.js:1521: WARNING - actual parameter 1 of toSource does not match formal parameter
found   : *
required: (Function|null)
        setCtorString = toSource(Set),
                                 ^^^

./lodash.js:1522: WARNING - actual parameter 1 of toSource does not match formal parameter
found   : *
required: (Function|null)
        weakMapCtorString = toSource(WeakMap);
                                     ^^^^^^^

./lodash.js:1525: WARNING - declaration of multiple variables with shared type information
    var symbolProto = Symbol ? Symbol.prototype : undefined,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:1651: WARNING - inconsistent return type
found   : *
required: (Object|null)
          return value;
                 ^^^^^

./lodash.js:1654: WARNING - actual parameter 1 of wrapperClone does not match formal parameter
found   : *
required: (Object|null)
          return wrapperClone(value);
                              ^^^^^

./lodash.js:1657: WARNING - cannot instantiate non-constructor
      return new LodashWrapper(value);
             ^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:1665: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} proto The object to inherit from.
               ^

./lodash.js:1666: WARNING - Bad type annotation. Unknown type Object
     * @returns {Object} Returns the new object.
                 ^

./lodash.js:1678: WARNING - cannot instantiate non-constructor
        var result = new object;
                     ^^^^^^^^^^

./lodash.js:1715: WARNING - Bad type annotation. Unknown type Object
     * @type {Object}
              ^

./lodash.js:1723: WARNING - Bad type annotation. Unknown type RegExp
       * @type {RegExp}
                ^

./lodash.js:1731: WARNING - Bad type annotation. Unknown type RegExp
       * @type {RegExp}
                ^

./lodash.js:1739: WARNING - Bad type annotation. Unknown type RegExp
       * @type {RegExp}
                ^

./lodash.js:1755: WARNING - Bad type annotation. Unknown type Object
       * @type {Object}
                ^

./lodash.js:1763: WARNING - Bad type annotation. Unknown type Function
         * @type {Function}
                  ^

./lodash.js:1805: WARNING - Function copyArray: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
      result.__actions__ = copyArray(this.__actions__);
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:1808: WARNING - Function copyArray: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
      result.__iteratees__ = copyArray(this.__iteratees__);
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:1810: WARNING - Function copyArray: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
      result.__views__ = copyArray(this.__views__);
                         ^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:1923: WARNING - * expressions are not callable
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
                                     ^^^^^^^^^^^^^^^^^^

./lodash.js:1937: WARNING - parameter hash does not appear in hashDelete's parameter list
    function hashDelete(key) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:2147: WARNING - cannot instantiate non-constructor
        'map': new (Map || ListCache),
               ^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:2431: WARNING - Function copyArray: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
                         ^^^^^^^^^^^^^^^^

./lodash.js:2431: WARNING - Function baseClamp: called with 3 argument(s). Function requires at least 1 argument(s) and no more than 2 argument(s).
      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:2442: WARNING - Function copyArray: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
      return shuffleSelf(copyArray(array));
                         ^^^^^^^^^^^^^^^^

./lodash.js:2512: WARNING - inconsistent return type
found   : (Object|null)
required: (Function|null)
      return accumulator;
             ^^^^^^^^^^^

./lodash.js:2568: WARNING - Bad type annotation. expected closing } See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {string[]} paths The property paths to pick.
                     ^

./lodash.js:2568: WARNING - Bad type annotation. expecting a variable name in a @param tag. See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {string[]} paths The property paths to pick.
                     ^

./lodash.js:2592: WARNING - optional arguments must be at the end
    function baseClamp(number, lower, upper) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:2637: WARNING - actual parameter 1 of initCloneArray does not match formal parameter
found   : *
required: (Array|null)
        result = initCloneArray(value);
                                ^^^^^

./lodash.js:2639: WARNING - actual parameter 1 of copyArray does not match formal parameter
found   : *
required: (Array|null)
          return copyArray(value, result);
                           ^^^^^

./lodash.js:2646: WARNING - actual parameter 2 of cloneBuffer does not match formal parameter
found   : number
required: (boolean|undefined)
          return cloneBuffer(value, isDeep);
                                    ^^^^^^

./lodash.js:2649: WARNING - actual parameter 1 of initCloneObject does not match formal parameter
found   : *
required: (Object|null)
          result = (isFlat || isFunc) ? {} : initCloneObject(value);
                                                             ^^^^^

./lodash.js:2652: WARNING - actual parameter 1 of copySymbolsIn does not match formal parameter
found   : *
required: (Object|null)
              ? copySymbolsIn(value, baseAssignIn(result, value))
                              ^^^^^

./lodash.js:2652: WARNING - actual parameter 2 of baseAssignIn does not match formal parameter
found   : *
required: (Object|null)
              ? copySymbolsIn(value, baseAssignIn(result, value))
                                                          ^^^^^

./lodash.js:2653: WARNING - actual parameter 1 of copySymbols does not match formal parameter
found   : *
required: (Object|null)
              : copySymbols(value, baseAssign(result, value));
                            ^^^^^

./lodash.js:2653: WARNING - actual parameter 2 of baseAssign does not match formal parameter
found   : *
required: (Object|null)
              : copySymbols(value, baseAssign(result, value));
                                                      ^^^^^

./lodash.js:2659: WARNING - actual parameter 1 of initCloneByTag does not match formal parameter
found   : *
required: (Object|null)
          result = initCloneByTag(value, tag, isDeep);
                                  ^^^^^

./lodash.js:2659: WARNING - actual parameter 3 of initCloneByTag does not match formal parameter
found   : number
required: (boolean|undefined)
          result = initCloneByTag(value, tag, isDeep);
                                              ^^^^^^

./lodash.js:2672: WARNING - actual parameter 5 of baseClone does not match formal parameter
found   : *
required: (Object|null|undefined)
          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
                                                                        ^^^^^

./lodash.js:2680: WARNING - actual parameter 5 of baseClone does not match formal parameter
found   : *
required: (Object|null|undefined)
          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
                                                                        ^^^^^

./lodash.js:2690: WARNING - actual parameter 1 of keysFunc does not match formal parameter
found   : *
required: (Object|null)
      var props = isArr ? undefined : keysFunc(value);
                                               ^^^^^

./lodash.js:2691: WARNING - Function arrayEach: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
      arrayEach(props || value, function(subValue, key) {
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:2691: WARNING - actual parameter 1 of arrayEach does not match formal parameter
found   : *
required: (Array|null|undefined)
      arrayEach(props || value, function(subValue, key) {
                ^^^^^^^^^^^^^^

./lodash.js:2697: WARNING - actual parameter 5 of baseClone does not match formal parameter
found   : *
required: (Object|null|undefined)
        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
                                                                               ^^^^^

./lodash.js:2782: WARNING - Function arrayMap: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
        values = arrayMap(values, baseUnary(iteratee));
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:2791: WARNING - assignment
found   : SetCache
required: (Array|null)
        values = new SetCache(values);
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:2819: WARNING - Bad type annotation. Unknown type Array
     * @param {Array|Object} collection The collection to iterate over.
               ^

./lodash.js:2819: WARNING - Bad type annotation. Unknown type Object
     * @param {Array|Object} collection The collection to iterate over.
                     ^

./lodash.js:2820: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} iteratee The function invoked per iteration.
               ^

./lodash.js:2821: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array|Object} Returns `collection`.
                 ^

./lodash.js:2821: WARNING - Bad type annotation. Unknown type Object
     * @returns {Array|Object} Returns `collection`.
                       ^

./lodash.js:2823: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), (?|null)): (?|null)
    var baseEach = createBaseEach(baseForOwn);
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:2829: WARNING - Bad type annotation. Unknown type Array
     * @param {Array|Object} collection The collection to iterate over.
               ^

./lodash.js:2829: WARNING - Bad type annotation. Unknown type Object
     * @param {Array|Object} collection The collection to iterate over.
                     ^

./lodash.js:2830: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} iteratee The function invoked per iteration.
               ^

./lodash.js:2831: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array|Object} Returns `collection`.
                 ^

./lodash.js:2831: WARNING - Bad type annotation. Unknown type Object
     * @returns {Array|Object} Returns `collection`.
                       ^

./lodash.js:2833: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), (?|null)): (?|null)
    var baseEachRight = createBaseEach(baseForOwnRight, true);
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:2871: WARNING - Variable referenced before declaration: computed
        if (current != null && (computed === undefined
                                ^^^^^^^^

./lodash.js:2873: WARNING - Variable referenced before declaration: computed
              : comparator(current, computed)
                                    ^^^^^^^^

./lodash.js:2936: WARNING - Bad type annotation. missing closing ] See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {Array} [result=[]] The initial result value.
                              ^

./lodash.js:2939: WARNING - optional arguments must be at the end
    function baseFlatten(array, depth, predicate, isStrict, result) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:2943: WARNING - assignment
found   : function(*): boolean
required: (boolean|undefined)
      predicate || (predicate = isFlattenable);
                    ^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:2948: WARNING - (boolean|function(*): boolean) expressions are not callable
        if (depth > 0 && predicate(value)) {
                         ^^^^^^^^^^^^^^^^

./lodash.js:2951: WARNING - Function baseFlatten: called with 5 argument(s). Function requires at least 2 argument(s) and no more than 4 argument(s).
            baseFlatten(value, depth - 1, predicate, isStrict, result);
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:2951: WARNING - actual parameter 3 of baseFlatten does not match formal parameter
found   : (boolean|function(*): boolean|undefined)
required: (boolean|undefined)
            baseFlatten(value, depth - 1, predicate, isStrict, result);
                                          ^^^^^^^^^

./lodash.js:2968: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} object The object to iterate over.
               ^

./lodash.js:2969: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} iteratee The function invoked per iteration.
               ^

./lodash.js:2970: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} keysFunc The function to get the keys of `object`.
               ^

./lodash.js:2971: WARNING - Bad type annotation. Unknown type Object
     * @returns {Object} Returns `object`.
                 ^

./lodash.js:2973: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), (?|null), (?|null)): (?|null)
    var baseFor = createBaseFor();
                  ^^^^^^^^^^^^^^^

./lodash.js:2980: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} object The object to iterate over.
               ^

./lodash.js:2981: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} iteratee The function invoked per iteration.
               ^

./lodash.js:2982: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} keysFunc The function to get the keys of `object`.
               ^

./lodash.js:2983: WARNING - Bad type annotation. Unknown type Object
     * @returns {Object} Returns `object`.
                 ^

./lodash.js:2985: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), (?|null), (?|null)): (?|null)
    var baseForRight = createBaseFor(true);
                       ^^^^^^^^^^^^^^^^^^^

./lodash.js:3021: WARNING - Function arrayFilter: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
      return arrayFilter(props, function(key) {
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:3099: WARNING - optional arguments must be at the end
    function baseHas(object, key) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:3111: WARNING - optional arguments must be at the end
    function baseHasIn(object, key) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:3150: WARNING - Function arrayMap: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
          array = arrayMap(array, baseUnary(iteratee));
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:3170: WARNING - Function includes: called with 3 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
              : includes(result, computed, comparator)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:3177: WARNING - Function includes: called with 3 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
                  : includes(arrays[othIndex], computed, comparator))
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:3206: WARNING - inconsistent return type
found   : (Object|null)
required: (Function|null)
      return accumulator;
             ^^^^^^^^^^^

./lodash.js:3221: WARNING - assignment
found   : *
required: (Object|null)
      object = parent(object, path);
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:3280: WARNING - actual parameter 1 of baseIsEqualDeep does not match formal parameter
found   : *
required: (Object|null)
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
                             ^^^^^

./lodash.js:3280: WARNING - actual parameter 2 of baseIsEqualDeep does not match formal parameter
found   : *
required: (Object|null)
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
                                    ^^^^^

./lodash.js:3280: WARNING - actual parameter 3 of baseIsEqualDeep does not match formal parameter
found   : boolean
required: number
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
                                           ^^^^^^^

./lodash.js:3280: WARNING - actual parameter 4 of baseIsEqualDeep does not match formal parameter
found   : (Function|null|undefined)
required: (Function|null)
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
                                                    ^^^^^^^^^^

./lodash.js:3320: WARNING - actual parameter 1 of equalArrays does not match formal parameter
found   : (Object|null)
required: (Array|null)
          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
                        ^^^^^^

./lodash.js:3320: WARNING - actual parameter 2 of equalArrays does not match formal parameter
found   : (Object|null)
required: (Array|null)
          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
                                ^^^^^

./lodash.js:3320: WARNING - actual parameter 6 of equalArrays does not match formal parameter
found   : (Object|null|undefined)
required: (Object|null)
          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
                                                                       ^^^^^

./lodash.js:3321: WARNING - actual parameter 7 of equalByTag does not match formal parameter
found   : (Object|null|undefined)
required: (Object|null)
          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
                                                                              ^^^^^

./lodash.js:3339: WARNING - actual parameter 6 of equalObjects does not match formal parameter
found   : (Object|null|undefined)
required: (Object|null)
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
                                                                         ^^^^^

./lodash.js:3397: WARNING - actual parameter 3 of baseIsEqual does not match formal parameter
found   : number
required: boolean
                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:3416: WARNING - actual parameter 1 of isMasked does not match formal parameter
found   : *
required: (Function|null)
      if (!isObject(value) || isMasked(value)) {
                                       ^^^^^

./lodash.js:3420: WARNING - actual parameter 1 of toSource does not match formal parameter
found   : *
required: (Function|null)
      return pattern.test(toSource(value));
                                   ^^^^^

./lodash.js:3476: WARNING - actual parameter 1 of baseMatches does not match formal parameter
found   : *
required: (Object|null)
          : baseMatches(value);
                        ^^^^^

./lodash.js:3478: WARNING - actual parameter 1 of property does not match formal parameter
found   : *
required: (Array|null|string)
      return property(value);
                      ^^^^^

./lodash.js:3581: WARNING - actual parameter 1 of matchesStrictComparable does not match formal parameter
found   : (string|symbol)
required: string
        return matchesStrictComparable(toKey(path), srcValue);
                                       ^^^^^^^^^^^

./lodash.js:3587: WARNING - actual parameter 3 of baseIsEqual does not match formal parameter
found   : number
required: boolean
          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:3665: WARNING - Function copyArray: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
            newValue = copyArray(objValue);
                       ^^^^^^^^^^^^^^^^^^^

./lodash.js:3665: WARNING - actual parameter 1 of copyArray does not match formal parameter
found   : *
required: (Array|null)
            newValue = copyArray(objValue);
                                 ^^^^^^^^

./lodash.js:3673: WARNING - actual parameter 1 of cloneTypedArray does not match formal parameter
found   : *
required: (Object|null)
            newValue = cloneTypedArray(srcValue, true);
                                       ^^^^^^^^

./lodash.js:3685: WARNING - actual parameter 1 of initCloneObject does not match formal parameter
found   : *
required: (Object|null)
            newValue = initCloneObject(srcValue);
                                       ^^^^^^^^

./lodash.js:3723: WARNING - Bad type annotation. expected closing } See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
                       ^

./lodash.js:3723: WARNING - Bad type annotation. expecting a variable name in a @param tag. See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
                       ^

./lodash.js:3724: WARNING - Bad type annotation. expected closing } See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {string[]} orders The sort orders of `iteratees`.
                     ^

./lodash.js:3724: WARNING - Bad type annotation. expecting a variable name in a @param tag. See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {string[]} orders The sort orders of `iteratees`.
                     ^

./lodash.js:3729: WARNING - Function arrayMap: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:3732: WARNING - Function arrayMap: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
        var criteria = arrayMap(iteratees, function(iteratee) {
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:3749: WARNING - Bad type annotation. expected closing } See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {string[]} paths The property paths to pick.
                     ^

./lodash.js:3749: WARNING - Bad type annotation. expecting a variable name in a @param tag. See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {string[]} paths The property paths to pick.
                     ^

./lodash.js:3763: WARNING - Bad type annotation. expected closing } See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {string[]} paths The property paths to pick.
                     ^

./lodash.js:3763: WARNING - Bad type annotation. expecting a variable name in a @param tag. See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {string[]} paths The property paths to pick.
                     ^

./lodash.js:3814: WARNING - Function copyArray: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
        values = copyArray(values);
                 ^^^^^^^^^^^^^^^^^

./lodash.js:3817: WARNING - Function arrayMap: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
        seen = arrayMap(array, baseUnary(iteratee));
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:3824: WARNING - actual parameter 4 of indexOf does not match formal parameter
found   : (Function|null|undefined)
required: (Function|null)
        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
                                                               ^^^^^^^^^^

./lodash.js:3840: WARNING - Bad type annotation. expected closing } See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {number[]} indexes The indexes of elements to remove.
                     ^

./lodash.js:3840: WARNING - Bad type annotation. expecting a variable name in a @param tag. See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {number[]} indexes The indexes of elements to remove.
                     ^

./lodash.js:3849: WARNING - Variable referenced before declaration: previous
        if (length == lastIndex || index !== previous) {
                                             ^^^^^^^^

./lodash.js:3934: WARNING - Function overRest: called with 3 argument(s). Function requires at least 1 argument(s) and no more than 2 argument(s).
      return setToString(overRest(func, start, identity), func + '');
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:3958: WARNING - Function baseClamp: called with 3 argument(s). Function requires at least 1 argument(s) and no more than 2 argument(s).
      return shuffleSelf(array, baseClamp(n, 0, array.length));
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:3995: WARNING - actual parameter 2 of assignValue does not match formal parameter
found   : (string|symbol)
required: string
        assignValue(nested, key, newValue);
                            ^^^

./lodash.js:4005: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} func The function to associate metadata with.
               ^

./lodash.js:4007: WARNING - Bad type annotation. Unknown type Function
     * @returns {Function} Returns `func`.
                 ^

./lodash.js:4018: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} func The function to modify.
               ^

./lodash.js:4019: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} string The `toString` result.
               ^

./lodash.js:4020: WARNING - Bad type annotation. Unknown type Function
     * @returns {Function} Returns `func`.
                 ^

./lodash.js:4196: WARNING - Variable referenced before declaration: seen
        if (!index || !eq(computed, seen)) {
                                    ^^^^

./lodash.js:4237: WARNING - Function arrayMap: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
        return arrayMap(value, baseToString) + '';
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:4237: WARNING - actual parameter 1 of arrayMap does not match formal parameter
found   : *
required: (Array|null|undefined)
        return arrayMap(value, baseToString) + '';
                        ^^^^^

./lodash.js:4243: WARNING - right operand
found   : *
required: number
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
                                    ^^^^^

./lodash.js:4317: WARNING - assignment
found   : *
required: (Object|null)
      object = parent(object, path);
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:4375: WARNING - actual parameter 3 of arrayReduce does not match formal parameter
found   : *
required: (boolean|undefined)
      }, result);
         ^^^^^^

./lodash.js:4439: WARNING - inconsistent return type
found   : *
required: (Object|null)
      return isArrayLikeObject(value) ? value : [];
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:4463: WARNING - inconsistent return type
found   : *
required: (Array|null)
        return value;
               ^^^^^

./lodash.js:4473: WARNING - Bad type annotation. Unknown type Function
     * @type {Function}
              ^

./lodash.js:4474: WARNING - Bad type annotation. type annotation incompatible with other annotations. See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {Function} func The function to apply a rest parameter to.
                         ^

./lodash.js:4475: WARNING - Bad type annotation. type annotation incompatible with other annotations. See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @returns {Function} Returns the new function.
       ^

./lodash.js:4498: WARNING - Bad type annotation. Unknown type Object
     * @param {number|Object} id The timer id or timeout object of the timer to clear.
                      ^

./lodash.js:4508: WARNING - Bad type annotation. Unknown type Buffer
     * @param {Buffer} buffer The buffer to clone.
               ^

./lodash.js:4510: WARNING - Bad type annotation. Unknown type Buffer
     * @returns {Buffer} Returns the cloned buffer.
                 ^

./lodash.js:4635: WARNING - Bad type annotation. expected closing } See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {boolean[]|string[]} orders The order to sort by for each property.
                      ^

./lodash.js:4635: WARNING - Bad type annotation. expecting a variable name in a @param tag. See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {boolean[]|string[]} orders The order to sort by for each property.
                      ^

./lodash.js:4742: WARNING - Bad type annotation. missing closing ] See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {Array} [array=[]] The array to copy values to.
                             ^

./lodash.js:4762: WARNING - Bad type annotation. missing closing ] See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {Object} [object={}] The object to copy properties to.
                               ^

./lodash.js:4797: WARNING - Bad type annotation. missing closing ] See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {Object} [object={}] The object to copy symbols to.
                               ^

./lodash.js:4809: WARNING - Bad type annotation. missing closing ] See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {Object} [object={}] The object to copy symbols to.
                               ^

./lodash.js:4829: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
        return func(collection, setter, getIteratee(iteratee, 2), accumulator);
                                        ^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:4976: WARNING - actual parameter 3 of arrayReduce does not match formal parameter
found   : string
required: (boolean|undefined)
        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
                                                                                ^^

./lodash.js:5061: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
          var iteratee = getIteratee(predicate, 3);
                         ^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:5081: WARNING - Property thru never defined on LodashWrapper.prototype
            prereq = LodashWrapper.prototype.thru;
                                             ^^^^

./lodash.js:5091: WARNING - Variable referenced before declaration: wrapper
          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
                         ^^^^^^^

./lodash.js:5092: WARNING - cannot instantiate non-constructor
            var wrapper = new LodashWrapper([], true);
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:5156: WARNING - actual parameter 1 of createCtor does not match formal parameter
found   : (Function|null|string)
required: (Function|null)
          Ctor = isBindKey ? undefined : createCtor(func);
                                                    ^^^^

./lodash.js:5171: WARNING - actual parameter 3 of composeArgs does not match formal parameter
found   : (Array|null|undefined)
required: (Array|null)
          args = composeArgs(args, partials, holders, isCurried);
                                             ^^^^^^^

./lodash.js:5174: WARNING - actual parameter 3 of composeArgsRight does not match formal parameter
found   : (Array|null|undefined)
required: (Array|null)
          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
                                                       ^^^^^^^^^^^^

./lodash.js:5180: WARNING - actual parameter 1 of createRecurry does not match formal parameter
found   : (Function|null|string)
required: (Function|null)
            func, bitmask, createHybrid, wrapper.placeholder, thisArg,
            ^^^^

./lodash.js:5261: WARNING - Function arrayMap: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:5277: WARNING - Bad type annotation. missing closing ] See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {string} [chars=' '] The string used as padding.
                                ^

./lodash.js:5442: WARNING - Bad type annotation. Unknown type Array
     * @param {Array} values The values to add to the set.
               ^

./lodash.js:5443: WARNING - Bad type annotation. Unknown type Object
     * @returns {Object} Returns the new set.
                 ^

./lodash.js:5445: WARNING - cannot instantiate non-constructor
    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
                                             ^^^^^^^^^^^^^^

./lodash.js:5446: WARNING - cannot instantiate non-constructor
      return new Set(values);
             ^^^^^^^^^^^^^^^

./lodash.js:5522: WARNING - actual parameter 2 of mergeData does not match formal parameter
found   : *
required: (Array|null)
        mergeData(newData, data);
                           ^^^^

./lodash.js:5587: WARNING - actual parameter 1 of baseMerge does not match formal parameter
found   : *
required: (Object|null)
        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
                  ^^^^^^^^

./lodash.js:5587: WARNING - actual parameter 2 of baseMerge does not match formal parameter
found   : *
required: (Object|null)
        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
                            ^^^^^^^^

./lodash.js:5602: WARNING - parameter key does not appear in customOmitClone's parameter list
    function customOmitClone(value) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:5658: WARNING - Function arraySome: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
          if (!arraySome(other, function(othValue, othIndex) {
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:5847: WARNING - Function overRest: called with 3 argument(s). Function requires at least 1 argument(s) and no more than 2 argument(s).
      return setToString(overRest(func, undefined, flatten), func + '');
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:5877: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} func The function to query.
               ^

./lodash.js:5929: WARNING - parameter arity does not appear in getIteratee's parameter list
    function getIteratee() {
    ^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:5929: WARNING - parameter value does not appear in getIteratee's parameter list
    function getIteratee() {
    ^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:5932: WARNING - Function result: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
      return arguments.length ? result(arguments[0], arguments[1]) : result;
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:5979: WARNING - Function getValue: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
      var value = getValue(object, key);
                  ^^^^^^^^^^^^^^^^^^^^^

./lodash.js:6014: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} object The object to query.
               ^

./lodash.js:6015: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the array of symbols.
                 ^

./lodash.js:6022: WARNING - Function arrayFilter: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
      return arrayFilter(nativeGetSymbols(object), function(symbol) {
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:6031: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} object The object to query.
               ^

./lodash.js:6032: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the array of symbols.
                 ^

./lodash.js:6053: WARNING - cannot instantiate non-constructor
    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:6054: WARNING - cannot instantiate non-constructor
        (Map && getTag(new Map) != mapTag) ||
                       ^^^^^^^

./lodash.js:6056: WARNING - cannot instantiate non-constructor
        (Set && getTag(new Set) != setTag) ||
                       ^^^^^^^

./lodash.js:6057: WARNING - cannot instantiate non-constructor
        (WeakMap && getTag(new WeakMap) != weakMapTag)) {
                           ^^^^^^^^^^^

./lodash.js:6191: WARNING - Missing return statement. Function expected to return (Object|null).
    function initCloneByTag(object, tag, isDeep) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:6195: WARNING - actual parameter 1 of cloneArrayBuffer does not match formal parameter
found   : Object
required: (ArrayBuffer|null)
          return cloneArrayBuffer(object);
                                  ^^^^^^

./lodash.js:6233: WARNING - Bad type annotation. type annotation incompatible with other annotations. See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @returns {string} Returns the modified source.
       ^

./lodash.js:6238: WARNING - inconsistent return type
found   : string
required: (Array|null)
        return source;
               ^^^^^^

./lodash.js:6243: WARNING - inconsistent return type
found   : string
required: (Array|null)
      return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:6273: WARNING - left side of numeric comparison
found   : *
required: number
            (value > -1 && value % 1 == 0 && value < length);
             ^^^^^

./lodash.js:6483: WARNING - Function composeArgs: called with 3 argument(s). Function requires at least 4 argument(s) and no more than 4 argument(s).
        data[3] = partials ? composeArgs(partials, value, source[4]) : value;
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:6490: WARNING - Function composeArgsRight: called with 3 argument(s). Function requires at least 4 argument(s) and no more than 4 argument(s).
        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:6552: WARNING - optional arguments must be at the end
    function overRest(func, start, transform) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:6598: WARNING - Function copyArray: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
          oldArray = copyArray(array);
                     ^^^^^^^^^^^^^^^^

./lodash.js:6633: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} func The function to associate metadata with.
               ^

./lodash.js:6635: WARNING - Bad type annotation. Unknown type Function
     * @returns {Function} Returns `func`.
                 ^

./lodash.js:6637: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), *): (?|null)
    var setData = shortOut(baseSetData);
                  ^^^^^^^^^^^^^^^^^^^^^

./lodash.js:6643: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} func The function to delay.
               ^

./lodash.js:6645: WARNING - Bad type annotation. Unknown type Object
     * @returns {number|Object} Returns the timer id or timeout object.
                        ^

./lodash.js:6655: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} func The function to modify.
               ^

./lodash.js:6656: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} string The `toString` result.
               ^

./lodash.js:6657: WARNING - Bad type annotation. Unknown type Function
     * @returns {Function} Returns `func`.
                 ^

./lodash.js:6659: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), (?|null)): (?|null)
    var setToString = shortOut(baseSetToString);
                      ^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:6726: WARNING - assignment to property length of Array
found   : (number|undefined)
required: number
      array.length = size;
      ^^^^^^^^^^^^^^^^^^^

./lodash.js:6735: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the property path array.
                 ^

./lodash.js:6737: WARNING - initializing variable
found   : (Function|null)
required: function(string): (?|null)
    var stringToPath = memoizeCapped(function(string) {
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:6757: WARNING - inconsistent return type
found   : *
required: (string|symbol)
        return value;
               ^^^^^

./lodash.js:6760: WARNING - right operand
found   : *
required: number
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
                                    ^^^^^

./lodash.js:6777: WARNING - unreachable code
        } catch (e) {}
          ^^^^^^^^^^^^

./lodash.js:6788: WARNING - Bad type annotation. type annotation incompatible with other annotations. See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @returns {Array} Returns `details`.
       ^

./lodash.js:6791: WARNING - Function arrayEach: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
      arrayEach(wrapFlags, function(pair) {
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:6793: WARNING - Function arrayIncludes: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:6811: WARNING - cannot instantiate non-constructor
      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:6812: WARNING - Function copyArray: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
      result.__actions__ = copyArray(wrapper.__actions__);
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:6841: WARNING - optional arguments must be at the end
    function chunk(array, size, guard) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:6913: WARNING - parameter array does not appear in concat's parameter list
    function concat() {
    ^^^^^^^^^^^^^^^^^^^

./lodash.js:6913: WARNING - parameter values does not appear in concat's parameter list
    function concat() {
    ^^^^^^^^^^^^^^^^^^^

./lodash.js:6925: WARNING - Function copyArray: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
                                        ^^^^^^^^^^^^^^^^

./lodash.js:6940: WARNING - Bad type annotation. Unknown type Array
     * @param {Array} array The array to inspect.
               ^

./lodash.js:6941: WARNING - Bad type annotation. Unknown type Array
     * @param {...Array} [values] The values to exclude.
                  ^

./lodash.js:6942: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the new array of filtered values.
                 ^

./lodash.js:6949: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), ...(?|null)): (?|null)
    var difference = baseRest(function(array, values) {
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:6951: WARNING - actual parameter 3 of baseFlatten does not match formal parameter
found   : function(*): boolean
required: (boolean|undefined)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
                                                       ^^^^^^^^^^^^^^^^^

./lodash.js:6968: WARNING - Bad type annotation. Unknown type Array
     * @param {Array} array The array to inspect.
               ^

./lodash.js:6969: WARNING - Bad type annotation. Unknown type Array
     * @param {...Array} [values] The values to exclude.
                  ^

./lodash.js:6970: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
               ^

./lodash.js:6971: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the new array of filtered values.
                 ^

./lodash.js:6981: WARNING - variable length argument must be last
    var differenceBy = baseRest(function(array, values) {
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:6981: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), ...(?|null)): (?|null)
    var differenceBy = baseRest(function(array, values) {
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:6987: WARNING - actual parameter 3 of baseFlatten does not match formal parameter
found   : function(*): boolean
required: (boolean|undefined)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))
                                                       ^^^^^^^^^^^^^^^^^

./lodash.js:6987: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))
                                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:7003: WARNING - Bad type annotation. Unknown type Array
     * @param {Array} array The array to inspect.
               ^

./lodash.js:7004: WARNING - Bad type annotation. Unknown type Array
     * @param {...Array} [values] The values to exclude.
                  ^

./lodash.js:7005: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} [comparator] The comparator invoked per element.
               ^

./lodash.js:7006: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the new array of filtered values.
                 ^

./lodash.js:7014: WARNING - variable length argument must be last
    var differenceWith = baseRest(function(array, values) {
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:7014: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), ...(?|null)): (?|null)
    var differenceWith = baseRest(function(array, values) {
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:7020: WARNING - actual parameter 3 of baseFlatten does not match formal parameter
found   : function(*): boolean
required: (boolean|undefined)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)
                                                       ^^^^^^^^^^^^^^^^^

./lodash.js:7020: WARNING - actual parameter 4 of baseDifference does not match formal parameter
found   : *
required: (Function|null|undefined)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)
                                                                                            ^^^^^^^^^^

./lodash.js:7049: WARNING - optional arguments must be at the end
    function drop(array, n, guard) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:7083: WARNING - optional arguments must be at the end
    function dropRight(array, n, guard) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:7130: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
        ? baseWhile(array, getIteratee(predicate, 3), true, true)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:7171: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
        ? baseWhile(array, getIteratee(predicate, 3), true)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:7260: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      return baseFindIndex(array, getIteratee(predicate, 3), index);
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:7310: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      return baseFindIndex(array, getIteratee(predicate, 3), index, true);
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:7493: WARNING - Bad type annotation. Unknown type Array
     * @param {...Array} [arrays] The arrays to inspect.
                  ^

./lodash.js:7494: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the new array of intersecting values.
                 ^

./lodash.js:7500: WARNING - initializing variable
found   : (Function|null)
required: function(...(?|null)): (?|null)
    var intersection = baseRest(function(arrays) {
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:7501: WARNING - Function arrayMap: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
      var mapped = arrayMap(arrays, castArrayLikeObject);
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:7518: WARNING - Bad type annotation. Unknown type Array
     * @param {...Array} [arrays] The arrays to inspect.
                  ^

./lodash.js:7519: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
               ^

./lodash.js:7520: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the new array of intersecting values.
                 ^

./lodash.js:7530: WARNING - variable length argument must be last
    var intersectionBy = baseRest(function(arrays) {
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:7530: WARNING - initializing variable
found   : (Function|null)
required: function(...(?|null)): (?|null)
    var intersectionBy = baseRest(function(arrays) {
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:7532: WARNING - Function arrayMap: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
          mapped = arrayMap(arrays, castArrayLikeObject);
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:7540: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
        ? baseIntersection(mapped, getIteratee(iteratee, 2))
                                   ^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:7554: WARNING - Bad type annotation. Unknown type Array
     * @param {...Array} [arrays] The arrays to inspect.
                  ^

./lodash.js:7555: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} [comparator] The comparator invoked per element.
               ^

./lodash.js:7556: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the new array of intersecting values.
                 ^

./lodash.js:7565: WARNING - variable length argument must be last
    var intersectionWith = baseRest(function(arrays) {
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:7565: WARNING - initializing variable
found   : (Function|null)
required: function(...(?|null)): (?|null)
    var intersectionWith = baseRest(function(arrays) {
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:7567: WARNING - Function arrayMap: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
          mapped = arrayMap(arrays, castArrayLikeObject);
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:7586: WARNING - Bad type annotation. missing closing ] See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {string} [separator=','] The element separator.
                                   ^

./lodash.js:7689: WARNING - Bad type annotation. Unknown type Array
     * @param {Array} array The array to modify.
               ^

./lodash.js:7691: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns `array`.
                 ^

./lodash.js:7700: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), ...*): (?|null)
    var pull = baseRest(pullAll);
               ^^^^^^^^^^^^^^^^^

./lodash.js:7753: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
        ? basePullAll(array, values, getIteratee(iteratee, 2))
                                     ^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:7796: WARNING - Bad type annotation. Unknown type Array
     * @param {Array} array The array to modify.
               ^

./lodash.js:7797: WARNING - Bad type annotation. missing closing ) See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
                                ^

./lodash.js:7798: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the new array of removed elements.
                 ^

./lodash.js:7810: WARNING - initializing variable
found   : (Function|null)
required: function((?|null)): (?|null)
    var pullAt = flatRest(function(array, indexes) {
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:7814: WARNING - Function arrayMap: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
      basePullAt(array, arrayMap(indexes, function(index) {
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:7858: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      predicate = getIteratee(predicate, 3);
                  ^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:7976: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
                                             ^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:8054: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
                                             ^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:8123: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
        ? baseSortedUniq(array, getIteratee(iteratee, 2))
                                ^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:8171: WARNING - optional arguments must be at the end
    function take(array, n, guard) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:8204: WARNING - optional arguments must be at the end
    function takeRight(array, n, guard) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:8251: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
        ? baseWhile(array, getIteratee(predicate, 3), false, true)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:8292: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
        ? baseWhile(array, getIteratee(predicate, 3))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:8305: WARNING - Bad type annotation. Unknown type Array
     * @param {...Array} [arrays] The arrays to inspect.
                  ^

./lodash.js:8306: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the new array of combined values.
                 ^

./lodash.js:8312: WARNING - initializing variable
found   : (Function|null)
required: function(...(?|null)): (?|null)
    var union = baseRest(function(arrays) {
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:8313: WARNING - actual parameter 3 of baseFlatten does not match formal parameter
found   : function(*): boolean
required: (boolean|undefined)
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
                                             ^^^^^^^^^^^^^^^^^

./lodash.js:8327: WARNING - Bad type annotation. Unknown type Array
     * @param {...Array} [arrays] The arrays to inspect.
                  ^

./lodash.js:8328: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
               ^

./lodash.js:8329: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the new array of combined values.
                 ^

./lodash.js:8339: WARNING - variable length argument must be last
    var unionBy = baseRest(function(arrays) {
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:8339: WARNING - initializing variable
found   : (Function|null)
required: function(...(?|null)): (?|null)
    var unionBy = baseRest(function(arrays) {
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:8344: WARNING - actual parameter 3 of baseFlatten does not match formal parameter
found   : function(*): boolean
required: (boolean|undefined)
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
                                             ^^^^^^^^^^^^^^^^^

./lodash.js:8344: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:8357: WARNING - Bad type annotation. Unknown type Array
     * @param {...Array} [arrays] The arrays to inspect.
                  ^

./lodash.js:8358: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} [comparator] The comparator invoked per element.
               ^

./lodash.js:8359: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the new array of combined values.
                 ^

./lodash.js:8368: WARNING - variable length argument must be last
    var unionWith = baseRest(function(arrays) {
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:8368: WARNING - initializing variable
found   : (Function|null)
required: function(...(?|null)): (?|null)
    var unionWith = baseRest(function(arrays) {
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:8371: WARNING - actual parameter 3 of baseFlatten does not match formal parameter
found   : function(*): boolean
required: (boolean|undefined)
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
                                             ^^^^^^^^^^^^^^^^^

./lodash.js:8420: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];
                                                       ^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:8472: WARNING - Function arrayFilter: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
      array = arrayFilter(array, function(group) {
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:8479: WARNING - Function arrayMap: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
        return arrayMap(array, baseProperty(index));
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:8512: WARNING - Function arrayMap: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
      return arrayMap(result, function(group) {
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:8513: WARNING - actual parameter 1 of apply does not match formal parameter
found   : (Function|null|undefined)
required: (Function|null)
        return apply(iteratee, undefined, group);
                     ^^^^^^^^

./lodash.js:8528: WARNING - Bad type annotation. Unknown type Array
     * @param {Array} array The array to inspect.
               ^

./lodash.js:8530: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the new array of filtered values.
                 ^

./lodash.js:8537: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), ...*): (?|null)
    var without = baseRest(function(array, values) {
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:8553: WARNING - Bad type annotation. Unknown type Array
     * @param {...Array} [arrays] The arrays to inspect.
                  ^

./lodash.js:8554: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the new array of filtered values.
                 ^

./lodash.js:8561: WARNING - initializing variable
found   : (Function|null)
required: function(...(?|null)): (?|null)
    var xor = baseRest(function(arrays) {
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:8562: WARNING - Function arrayFilter: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
      return baseXor(arrayFilter(arrays, isArrayLikeObject));
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:8576: WARNING - Bad type annotation. Unknown type Array
     * @param {...Array} [arrays] The arrays to inspect.
                  ^

./lodash.js:8577: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
               ^

./lodash.js:8578: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the new array of filtered values.
                 ^

./lodash.js:8588: WARNING - variable length argument must be last
    var xorBy = baseRest(function(arrays) {
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:8588: WARNING - initializing variable
found   : (Function|null)
required: function(...(?|null)): (?|null)
    var xorBy = baseRest(function(arrays) {
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:8593: WARNING - Function arrayFilter: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:8593: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
                                                             ^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:8606: WARNING - Bad type annotation. Unknown type Array
     * @param {...Array} [arrays] The arrays to inspect.
                  ^

./lodash.js:8607: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} [comparator] The comparator invoked per element.
               ^

./lodash.js:8608: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the new array of filtered values.
                 ^

./lodash.js:8617: WARNING - variable length argument must be last
    var xorWith = baseRest(function(arrays) {
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:8617: WARNING - initializing variable
found   : (Function|null)
required: function(...(?|null)): (?|null)
    var xorWith = baseRest(function(arrays) {
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:8620: WARNING - Function arrayFilter: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:8632: WARNING - Bad type annotation. Unknown type Array
     * @param {...Array} [arrays] The arrays to process.
                  ^

./lodash.js:8633: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the new array of grouped elements.
                 ^

./lodash.js:8639: WARNING - initializing variable
found   : (Function|null)
required: function(...(?|null)): (?|null)
    var zip = baseRest(unzip);
              ^^^^^^^^^^^^^^^

./lodash.js:8649: WARNING - Bad type annotation. missing closing ] See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {Array} [props=[]] The property identifiers.
                             ^

./lodash.js:8650: WARNING - Bad type annotation. missing closing ] See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {Array} [values=[]] The property values.
                              ^

./lodash.js:8668: WARNING - Bad type annotation. missing closing ] See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {Array} [props=[]] The property identifiers.
                             ^

./lodash.js:8669: WARNING - Bad type annotation. missing closing ] See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {Array} [values=[]] The property values.
                              ^

./lodash.js:8689: WARNING - Bad type annotation. Unknown type Array
     * @param {...Array} [arrays] The arrays to process.
                  ^

./lodash.js:8690: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} [iteratee=_.identity] The function to combine
               ^

./lodash.js:8692: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the new array of grouped elements.
                 ^

./lodash.js:8700: WARNING - variable length argument must be last
    var zipWith = baseRest(function(arrays) {
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:8700: WARNING - initializing variable
found   : (Function|null)
required: function(...(?|null)): (?|null)
    var zipWith = baseRest(function(arrays) {
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:8807: WARNING - Bad type annotation. missing closing ) See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {...(string|string[])} [paths] The property paths to pick.
                                ^

./lodash.js:8808: WARNING - Bad type annotation. Unknown type Object
     * @returns {Object} Returns the new `lodash` wrapper instance.
                 ^

./lodash.js:8816: WARNING - initializing variable
found   : (Function|null)
required: function(): (?|null)
    var wrapperAt = flatRest(function(paths) {
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:8832: WARNING - cannot instantiate non-constructor
      return new LodashWrapper(value, this.__chain__).thru(function(array) {
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:8898: WARNING - cannot instantiate non-constructor
      return new LodashWrapper(this.value(), this.__chain__);
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:8988: WARNING - Variable referenced before declaration: previous
          previous.__wrapped__ = clone;
          ^^^^^^^^

./lodash.js:8996: WARNING - inconsistent return type
found   : (Object|undefined)
required: (Object|null)
      return result;
             ^^^^^^

./lodash.js:9032: WARNING - cannot instantiate non-constructor
        return new LodashWrapper(wrapped, this.__chain__);
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:9067: WARNING - Bad type annotation. Unknown type Array
     * @param {Array|Object} collection The collection to iterate over.
               ^

./lodash.js:9067: WARNING - Bad type annotation. Unknown type Object
     * @param {Array|Object} collection The collection to iterate over.
                     ^

./lodash.js:9068: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
               ^

./lodash.js:9069: WARNING - Bad type annotation. Unknown type Object
     * @returns {Object} Returns the composed aggregate object.
                 ^

./lodash.js:9079: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), (?|null)=): (?|null)
    var countBy = createAggregator(function(result, value, key) {
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:9128: WARNING - optional arguments must be at the end
    function every(collection, predicate, guard) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:9133: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      return func(collection, getIteratee(predicate, 3));
                              ^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:9175: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      return func(collection, getIteratee(predicate, 3));
                              ^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:9187: WARNING - Bad type annotation. Unknown type Array
     * @param {Array|Object} collection The collection to inspect.
               ^

./lodash.js:9187: WARNING - Bad type annotation. Unknown type Object
     * @param {Array|Object} collection The collection to inspect.
                     ^

./lodash.js:9188: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
               ^

./lodash.js:9214: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), (?|null)=, number=): *
    var find = createFind(findIndex);
               ^^^^^^^^^^^^^^^^^^^^^

./lodash.js:9224: WARNING - Bad type annotation. Unknown type Array
     * @param {Array|Object} collection The collection to inspect.
               ^

./lodash.js:9224: WARNING - Bad type annotation. Unknown type Object
     * @param {Array|Object} collection The collection to inspect.
                     ^

./lodash.js:9225: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
               ^

./lodash.js:9235: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), (?|null)=, number=): *
    var findLast = createFind(findLastIndex);
                   ^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:9344: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      return func(collection, getIteratee(iteratee, 3));
                              ^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:9369: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      return func(collection, getIteratee(iteratee, 3));
                              ^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:9383: WARNING - Bad type annotation. Unknown type Array
     * @param {Array|Object} collection The collection to iterate over.
               ^

./lodash.js:9383: WARNING - Bad type annotation. Unknown type Object
     * @param {Array|Object} collection The collection to iterate over.
                     ^

./lodash.js:9384: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
               ^

./lodash.js:9385: WARNING - Bad type annotation. Unknown type Object
     * @returns {Object} Returns the composed aggregate object.
                 ^

./lodash.js:9395: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), (?|null)=): (?|null)
    var groupBy = createAggregator(function(result, value, key) {
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:9433: WARNING - optional arguments must be at the end
    function includes(collection, value, fromIndex, guard) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:9434: WARNING - actual parameter 1 of values does not match formal parameter
found   : (Object|null|string)
required: (Object|null)
      collection = isArrayLike(collection) ? collection : values(collection);
                                                                 ^^^^^^^^^^

./lodash.js:9442: WARNING - actual parameter 1 of collection.indexOf does not match formal parameter
found   : *
required: (null|string)
        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
                                                     ^^^^^

./lodash.js:9443: WARNING - actual parameter 1 of baseIndexOf does not match formal parameter
found   : (Object|string)
required: (Array|null)
        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
                                   ^^^^^^^^^^

./lodash.js:9456: WARNING - Bad type annotation. Unknown type Array
     * @param {Array|Object} collection The collection to iterate over.
               ^

./lodash.js:9456: WARNING - Bad type annotation. Unknown type Object
     * @param {Array|Object} collection The collection to iterate over.
                     ^

./lodash.js:9457: WARNING - Bad type annotation. Unknown type Array
     * @param {Array|Function|string} path The path of the method to invoke or
               ^

./lodash.js:9457: WARNING - Bad type annotation. Unknown type Function
     * @param {Array|Function|string} path The path of the method to invoke or
                     ^

./lodash.js:9460: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the array of results.
                 ^

./lodash.js:9469: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), (?|null|string), ...*): (?|null)
    var invokeMap = baseRest(function(collection, path, args) {
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:9490: WARNING - Bad type annotation. Unknown type Array
     * @param {Array|Object} collection The collection to iterate over.
               ^

./lodash.js:9490: WARNING - Bad type annotation. Unknown type Object
     * @param {Array|Object} collection The collection to iterate over.
                     ^

./lodash.js:9491: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
               ^

./lodash.js:9492: WARNING - Bad type annotation. Unknown type Object
     * @returns {Object} Returns the composed aggregate object.
                 ^

./lodash.js:9508: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), (?|null)=): (?|null)
    var keyBy = createAggregator(function(result, value, key) {
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:9556: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      return func(collection, getIteratee(iteratee, 3));
                              ^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:9570: WARNING - Bad type annotation. expected closing } See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
                    ^

./lodash.js:9570: WARNING - Bad type annotation. expecting a variable name in a @param tag. See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
                    ^

./lodash.js:9572: WARNING - Bad type annotation. expected closing } See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {string[]} [orders] The sort orders of `iteratees`.
                     ^

./lodash.js:9572: WARNING - Bad type annotation. expecting a variable name in a @param tag. See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {string[]} [orders] The sort orders of `iteratees`.
                     ^

./lodash.js:9612: WARNING - Bad type annotation. Unknown type Array
     * @param {Array|Object} collection The collection to iterate over.
               ^

./lodash.js:9612: WARNING - Bad type annotation. Unknown type Object
     * @param {Array|Object} collection The collection to iterate over.
                     ^

./lodash.js:9613: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
               ^

./lodash.js:9614: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the array of grouped elements.
                 ^

./lodash.js:9638: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), (?|null)=): (?|null)
    var partition = createAggregator(function(result, value, key) {
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:9683: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
                              ^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:9712: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
                              ^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:9751: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      return func(collection, negate(getIteratee(predicate, 3)));
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:9770: WARNING - actual parameter 1 of func does not match formal parameter
found   : (Object|null)
required: (Array|null)
      return func(collection);
                  ^^^^^^^^^^

./lodash.js:9793: WARNING - optional arguments must be at the end
    function sampleSize(collection, n, guard) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:9800: WARNING - actual parameter 1 of func does not match formal parameter
found   : (Object|null)
required: (Array|null)
      return func(collection, n);
                  ^^^^^^^^^^

./lodash.js:9820: WARNING - actual parameter 1 of func does not match formal parameter
found   : (Object|null)
required: (Array|null)
      return func(collection);
                  ^^^^^^^^^^

./lodash.js:9849: WARNING - actual parameter 1 of stringSize does not match formal parameter
found   : (Object|string)
required: string
        return isString(collection) ? stringSize(collection) : collection.length;
                                                 ^^^^^^^^^^

./lodash.js:9855: WARNING - actual parameter 1 of baseKeys does not match formal parameter
found   : (Object|string)
required: (Object|null)
      return baseKeys(collection).length;
                      ^^^^^^^^^^

./lodash.js:9894: WARNING - optional arguments must be at the end
    function some(collection, predicate, guard) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:9899: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      return func(collection, getIteratee(predicate, 3));
                              ^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:9912: WARNING - Bad type annotation. Unknown type Array
     * @param {Array|Object} collection The collection to iterate over.
               ^

./lodash.js:9912: WARNING - Bad type annotation. Unknown type Object
     * @param {Array|Object} collection The collection to iterate over.
                     ^

./lodash.js:9913: WARNING - Bad type annotation. missing closing ) See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
                                    ^

./lodash.js:9915: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the new sorted array.
                 ^

./lodash.js:9931: WARNING - initializing variable
found   : (Function|null)
required: function((?|null)): (?|null)
    var sortBy = baseRest(function(collection, iteratees) {
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:10021: WARNING - optional arguments must be at the end
    function ary(func, n, guard) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:10075: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} func The function to bind.
               ^

./lodash.js:10078: WARNING - Bad type annotation. Unknown type Function
     * @returns {Function} Returns the new bound function.
                 ^

./lodash.js:10096: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), *, ...*): (?|null)
    var bind = baseRest(function(func, thisArg, partials) {
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:10121: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} object The object to invoke the method on.
               ^

./lodash.js:10124: WARNING - Bad type annotation. Unknown type Function
     * @returns {Function} Returns the new bound function.
                 ^

./lodash.js:10150: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), string, ...*): (?|null)
    var bindKey = baseRest(function(object, key, partials) {
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:10200: WARNING - optional arguments must be at the end
    function curry(func, arity, guard) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:10245: WARNING - optional arguments must be at the end
    function curryRight(func, arity, guard) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:10279: WARNING - Bad type annotation. missing closing ] See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {Object} [options={}] The options object.
                                ^

./lodash.js:10306: WARNING - optional arguments must be at the end
    function debounce(func, wait, options) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:10343: WARNING - actual parameter 2 of setTimeout does not match formal parameter
found   : (number|undefined)
required: number
        timerId = setTimeout(timerExpired, wait);
                                           ^^^^

./lodash.js:10416: WARNING - actual parameter 2 of setTimeout does not match formal parameter
found   : (number|undefined)
required: number
            timerId = setTimeout(timerExpired, wait);
                                               ^^^^

./lodash.js:10421: WARNING - actual parameter 2 of setTimeout does not match formal parameter
found   : (number|undefined)
required: number
          timerId = setTimeout(timerExpired, wait);
                                             ^^^^

./lodash.js:10438: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} func The function to defer.
               ^

./lodash.js:10448: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), ...*): number
    var defer = baseRest(function(func, args) {
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:10460: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} func The function to delay.
               ^

./lodash.js:10471: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), number, ...*): number
    var delay = baseRest(function(func, wait, args) {
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:10629: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} func The function to wrap.
               ^

./lodash.js:10630: WARNING - Bad type annotation. missing closing ) See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {...(Function|Function[])} [transforms=[_.identity]]
                                    ^

./lodash.js:10632: WARNING - Bad type annotation. Unknown type Function
     * @returns {Function} Returns the new function.
                 ^

./lodash.js:10655: WARNING - Function arrayMap: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
        ? arrayMap(transforms[0], baseUnary(getIteratee()))
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:10656: WARNING - Function arrayMap: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:10685: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} func The function to partially apply arguments to.
               ^

./lodash.js:10687: WARNING - Bad type annotation. Unknown type Function
     * @returns {Function} Returns the new partially applied function.
                 ^

./lodash.js:10703: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), ...*): (?|null)
    var partial = baseRest(function(func, partials) {
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:10722: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} func The function to partially apply arguments to.
               ^

./lodash.js:10724: WARNING - Bad type annotation. Unknown type Function
     * @returns {Function} Returns the new partially applied function.
                 ^

./lodash.js:10740: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), ...*): (?|null)
    var partialRight = baseRest(function(func, partials) {
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:10755: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} func The function to rearrange arguments for.
               ^

./lodash.js:10756: WARNING - Bad type annotation. missing closing ) See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {...(number|number[])} indexes The arranged argument indexes.
                                ^

./lodash.js:10757: WARNING - Bad type annotation. Unknown type Function
     * @returns {Function} Returns the new function.
                 ^

./lodash.js:10767: WARNING - initializing variable
found   : (Function|null)
required: function((?|null)): (?|null)
    var rearg = flatRest(function(func, indexes) {
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:10880: WARNING - Bad type annotation. missing closing ] See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {Object} [options={}] The options object.
                                ^

./lodash.js:10898: WARNING - optional arguments must be at the end
    function throttle(func, wait, options) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:10909: WARNING - Function debounce: called with 3 argument(s). Function requires at least 1 argument(s) and no more than 2 argument(s).
      return debounce(func, wait, {
             ^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:10996: WARNING - parameter value does not appear in castArray's parameter list
    function castArray() {
    ^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:11031: WARNING - actual parameter 2 of baseClone does not match formal parameter
found   : number
required: boolean
      return baseClone(value, CLONE_SYMBOLS_FLAG);
                              ^^^^^^^^^^^^^^^^^^

./lodash.js:11067: WARNING - actual parameter 2 of baseClone does not match formal parameter
found   : number
required: boolean
      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
                              ^^^^^^^^^^^^^^^^^^

./lodash.js:11089: WARNING - actual parameter 2 of baseClone does not match formal parameter
found   : number
required: boolean
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:11122: WARNING - actual parameter 2 of baseClone does not match formal parameter
found   : number
required: boolean
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:11212: WARNING - initializing variable
found   : (Function|null)
required: function(*, *): boolean
    var gt = createRelationalOperation(baseGt);
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:11237: WARNING - initializing variable
found   : (Function|null)
required: function(*, *): boolean
    var gte = createRelationalOperation(function(value, other) {
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:11306: WARNING - initializing variable
found   : (Function|null)
required: function(*): boolean
    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:11424: WARNING - initializing variable
found   : (Function|null)
required: function(*): boolean
    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:11494: WARNING - actual parameter 1 of baseKeys does not match formal parameter
found   : *
required: (Object|null)
        return !baseKeys(value).length;
                         ^^^^^

./lodash.js:11533: WARNING - Function baseIsEqual: called with 2 argument(s). Function requires at least 3 argument(s) and no more than 5 argument(s).
      return baseIsEqual(value, other);
             ^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:11794: WARNING - initializing variable
found   : (Function|null)
required: function(*): boolean
    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:12067: WARNING - initializing variable
found   : (Function|null)
required: function(*): boolean
    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:12097: WARNING - left side of numeric comparison
found   : *
required: number
      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
                                 ^^^^^

./lodash.js:12117: WARNING - initializing variable
found   : (Function|null)
required: function(*): boolean
    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:12180: WARNING - initializing variable
found   : (Function|null)
required: function(*): boolean
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:12268: WARNING - initializing variable
found   : (Function|null)
required: function(*, *): boolean
    var lt = createRelationalOperation(baseLt);
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:12293: WARNING - initializing variable
found   : (Function|null)
required: function(*, *): boolean
    var lte = createRelationalOperation(function(value, other) {
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:12325: WARNING - actual parameter 1 of stringToArray does not match formal parameter
found   : *
required: string
        return isString(value) ? stringToArray(value) : copyArray(value);
                                               ^^^^^

./lodash.js:12325: WARNING - Function copyArray: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
        return isString(value) ? stringToArray(value) : copyArray(value);
                                                        ^^^^^^^^^^^^^^^^

./lodash.js:12325: WARNING - actual parameter 1 of copyArray does not match formal parameter
found   : *
required: (Array|null)
        return isString(value) ? stringToArray(value) : copyArray(value);
                                                                  ^^^^^

./lodash.js:12333: WARNING - actual parameter 1 of func does not match formal parameter
found   : *
required: (Object|null)
      return func(value);
                  ^^^^^

./lodash.js:12432: WARNING - Function baseClamp: called with 3 argument(s). Function requires at least 1 argument(s) and no more than 2 argument(s).
      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:12504: WARNING - Function copyObject: called with 2 argument(s). Function requires at least 3 argument(s) and no more than 4 argument(s).
      return copyObject(value, keysIn(value));
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:12504: WARNING - actual parameter 1 of copyObject does not match formal parameter
found   : *
required: (Object|null)
      return copyObject(value, keysIn(value));
                        ^^^^^

./lodash.js:12504: WARNING - actual parameter 1 of keysIn does not match formal parameter
found   : *
required: (Object|null)
      return copyObject(value, keysIn(value));
                                      ^^^^^

./lodash.js:12533: WARNING - Function baseClamp: called with 3 argument(s). Function requires at least 1 argument(s) and no more than 2 argument(s).
        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:12576: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} object The destination object.
               ^

./lodash.js:12577: WARNING - Bad type annotation. Unknown type Object
     * @param {...Object} [sources] The source objects.
                  ^

./lodash.js:12578: WARNING - Bad type annotation. Unknown type Object
     * @returns {Object} Returns `object`.
                 ^

./lodash.js:12596: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), ...(?|null)): (?|null)
    var assign = createAssigner(function(object, source) {
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:12619: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} object The destination object.
               ^

./lodash.js:12620: WARNING - Bad type annotation. Unknown type Object
     * @param {...Object} [sources] The source objects.
                  ^

./lodash.js:12621: WARNING - Bad type annotation. Unknown type Object
     * @returns {Object} Returns `object`.
                 ^

./lodash.js:12639: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), ...(?|null)): (?|null)
    var assignIn = createAssigner(function(object, source) {
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:12656: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} object The destination object.
               ^

./lodash.js:12657: WARNING - Bad type annotation. Unknown type Object
     * @param {...Object} sources The source objects.
                  ^

./lodash.js:12658: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} [customizer] The function to customize assigned values.
               ^

./lodash.js:12659: WARNING - Bad type annotation. Unknown type Object
     * @returns {Object} Returns `object`.
                 ^

./lodash.js:12672: WARNING - variable length argument must be last
    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:12672: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), ...(?|null)): (?|null)
    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:12688: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} object The destination object.
               ^

./lodash.js:12689: WARNING - Bad type annotation. Unknown type Object
     * @param {...Object} sources The source objects.
                  ^

./lodash.js:12690: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} [customizer] The function to customize assigned values.
               ^

./lodash.js:12691: WARNING - Bad type annotation. Unknown type Object
     * @returns {Object} Returns `object`.
                 ^

./lodash.js:12704: WARNING - variable length argument must be last
    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:12704: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), ...(?|null)): (?|null)
    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:12715: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} object The object to iterate over.
               ^

./lodash.js:12716: WARNING - Bad type annotation. missing closing ) See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {...(string|string[])} [paths] The property paths to pick.
                                ^

./lodash.js:12717: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the picked values.
                 ^

./lodash.js:12725: WARNING - initializing variable
found   : (Function|null)
required: function((?|null)): (?|null)
    var at = flatRest(baseAt);
             ^^^^^^^^^^^^^^^^

./lodash.js:12778: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} object The destination object.
               ^

./lodash.js:12779: WARNING - Bad type annotation. Unknown type Object
     * @param {...Object} [sources] The source objects.
                  ^

./lodash.js:12780: WARNING - Bad type annotation. Unknown type Object
     * @returns {Object} Returns `object`.
                 ^

./lodash.js:12787: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), ...(?|null)): (?|null)
    var defaults = baseRest(function(object, sources) {
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:12828: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} object The destination object.
               ^

./lodash.js:12829: WARNING - Bad type annotation. Unknown type Object
     * @param {...Object} [sources] The source objects.
                  ^

./lodash.js:12830: WARNING - Bad type annotation. Unknown type Object
     * @returns {Object} Returns `object`.
                 ^

./lodash.js:12837: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), ...(?|null)): (?|null)
    var defaultsDeep = baseRest(function(args) {
                       ^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:12878: WARNING - inconsistent return type
found   : *
required: (string|undefined)
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:12878: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:12917: WARNING - inconsistent return type
found   : *
required: (string|undefined)
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:12917: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:12951: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
        : baseFor(object, getIteratee(iteratee, 3), keysIn);
                          ^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:12983: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
        : baseForRight(object, getIteratee(iteratee, 3), keysIn);
                               ^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:13015: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      return object && baseForOwn(object, getIteratee(iteratee, 3));
                                          ^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:13045: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      return object && baseForOwnRight(object, getIteratee(iteratee, 3));
                                               ^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:13202: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} object The object to invert.
               ^

./lodash.js:13203: WARNING - Bad type annotation. Unknown type Object
     * @returns {Object} Returns the new inverted object.
                 ^

./lodash.js:13211: WARNING - initializing variable
found   : (Function|null)
required: function((?|null)): (?|null)
    var invert = createInverter(function(result, value, key) {
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:13231: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} object The object to invert.
               ^

./lodash.js:13232: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
               ^

./lodash.js:13233: WARNING - Bad type annotation. Unknown type Object
     * @returns {Object} Returns the new inverted object.
                 ^

./lodash.js:13246: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), (?|null)=): (?|null)
    var invertBy = createInverter(function(result, value, key) {
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:13266: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} object The object to query.
               ^

./lodash.js:13267: WARNING - Bad type annotation. Unknown type Array
     * @param {Array|string} path The path of the method to invoke.
               ^

./lodash.js:13277: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), (?|null|string), ...*): *
    var invoke = baseRest(baseInvoke);
                 ^^^^^^^^^^^^^^^^^^^^

./lodash.js:13308: WARNING - Function arrayLikeKeys: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
                                   ^^^^^^^^^^^^^^^^^^^^^

./lodash.js:13361: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      iteratee = getIteratee(iteratee, 3);
                 ^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:13399: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      iteratee = getIteratee(iteratee, 3);
                 ^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:13422: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} object The destination object.
               ^

./lodash.js:13423: WARNING - Bad type annotation. Unknown type Object
     * @param {...Object} [sources] The source objects.
                  ^

./lodash.js:13424: WARNING - Bad type annotation. Unknown type Object
     * @returns {Object} Returns `object`.
                 ^

./lodash.js:13438: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), ...(?|null)): (?|null)
    var merge = createAssigner(function(object, source, srcIndex) {
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:13455: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} object The destination object.
               ^

./lodash.js:13456: WARNING - Bad type annotation. Unknown type Object
     * @param {...Object} sources The source objects.
                  ^

./lodash.js:13457: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} customizer The function to customize assigned values.
               ^

./lodash.js:13458: WARNING - Bad type annotation. Unknown type Object
     * @returns {Object} Returns `object`.
                 ^

./lodash.js:13473: WARNING - variable length argument must be last
    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:13473: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), ...(?|null)): (?|null)
    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:13487: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} object The source object.
               ^

./lodash.js:13488: WARNING - Bad type annotation. missing closing ) See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {...(string|string[])} [paths] The property paths to omit.
                                ^

./lodash.js:13489: WARNING - Bad type annotation. Unknown type Object
     * @returns {Object} Returns the new object.
                 ^

./lodash.js:13497: WARNING - initializing variable
found   : (Function|null)
required: function((?|null)): (?|null)
    var omit = flatRest(function(object, paths) {
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:13503: WARNING - Function arrayMap: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
      paths = arrayMap(paths, function(path) {
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:13510: WARNING - actual parameter 2 of baseClone does not match formal parameter
found   : number
required: boolean
        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:13514: WARNING - actual parameter 1 of baseUnset does not match formal parameter
found   : *
required: (Object|null)
        baseUnset(result, paths[length]);
                  ^^^^^^

./lodash.js:13540: WARNING - Function getIteratee: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      return pickBy(object, negate(getIteratee(predicate)));
                                   ^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:13550: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} object The source object.
               ^

./lodash.js:13551: WARNING - Bad type annotation. missing closing ) See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {...(string|string[])} [paths] The property paths to pick.
                                ^

./lodash.js:13552: WARNING - Bad type annotation. Unknown type Object
     * @returns {Object} Returns the new object.
                 ^

./lodash.js:13560: WARNING - initializing variable
found   : (Function|null)
required: function((?|null)): (?|null)
    var pick = flatRest(function(object, paths) {
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:13586: WARNING - Function arrayMap: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
      var props = arrayMap(getAllKeysIn(object), function(prop) {
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:13589: WARNING - Function getIteratee: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      predicate = getIteratee(predicate);
                  ^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:13641: WARNING - assignment
found   : *
required: (Object|null)
        object = isFunction(value) ? value.call(object) : value;
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:13717: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} object The object to query.
               ^

./lodash.js:13718: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the key-value pairs.
                 ^

./lodash.js:13731: WARNING - initializing variable
found   : (Function|null)
required: function((?|null)): (?|null)
    var toPairs = createToPairs(keys);
                  ^^^^^^^^^^^^^^^^^^^

./lodash.js:13743: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} object The object to query.
               ^

./lodash.js:13744: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the key-value pairs.
                 ^

./lodash.js:13757: WARNING - initializing variable
found   : (Function|null)
required: function((?|null)): (?|null)
    var toPairsIn = createToPairs(keysIn);
                    ^^^^^^^^^^^^^^^^^^^^^

./lodash.js:13793: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      iteratee = getIteratee(iteratee, 4);
                 ^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:13930: WARNING - inconsistent return type
found   : (Object|null)
required: (Array|null)
      return object == null ? [] : baseValues(object, keys(object));
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:13958: WARNING - inconsistent return type
found   : (Object|null)
required: (Array|null)
      return object == null ? [] : baseValues(object, keysIn(object));
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:13982: WARNING - optional arguments must be at the end
    function clamp(number, lower, upper) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:13995: WARNING - Function baseClamp: called with 3 argument(s). Function requires at least 1 argument(s) and no more than 2 argument(s).
      return baseClamp(toNumber(number), lower, upper);
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:14036: WARNING - optional arguments must be at the end
    function inRange(number, start, end) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:14089: WARNING - assignment
found   : (number|undefined)
required: (boolean|undefined)
          floating = lower;
          ^^^^^^^^^^^^^^^^

./lodash.js:14140: WARNING - initializing variable
found   : (Function|null)
required: function(string=): string
    var camelCase = createCompounder(function(result, word, index) {
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:14217: WARNING - Function baseClamp: called with 3 argument(s). Function requires at least 1 argument(s) and no more than 2 argument(s).
        : baseClamp(toInteger(position), 0, length);
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:14302: WARNING - initializing variable
found   : (Function|null)
required: function(string=): string
    var kebabCase = createCompounder(function(result, word, index) {
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:14326: WARNING - initializing variable
found   : (Function|null)
required: function(string=): string
    var lowerCase = createCompounder(function(result, word, index) {
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:14347: WARNING - initializing variable
found   : (Function|null)
required: function(string=): string
    var lowerFirst = createCaseFirst('toLowerCase');
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:14359: WARNING - Bad type annotation. missing closing ] See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {string} [chars=' '] The string used as padding.
                                ^

./lodash.js:14372: WARNING - optional arguments must be at the end
    function pad(string, length, chars) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:14398: WARNING - Bad type annotation. missing closing ] See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {string} [chars=' '] The string used as padding.
                                ^

./lodash.js:14411: WARNING - optional arguments must be at the end
    function padEnd(string, length, chars) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:14431: WARNING - Bad type annotation. missing closing ] See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {string} [chars=' '] The string used as padding.
                                ^

./lodash.js:14444: WARNING - optional arguments must be at the end
    function padStart(string, length, chars) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:14478: WARNING - optional arguments must be at the end
    function parseInt(string, radix, guard) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:14509: WARNING - optional arguments must be at the end
    function repeat(string, n, guard) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:14537: WARNING - parameter pattern does not appear in replace's parameter list
    function replace() {
    ^^^^^^^^^^^^^^^^^^^^

./lodash.js:14537: WARNING - parameter replacement does not appear in replace's parameter list
    function replace() {
    ^^^^^^^^^^^^^^^^^^^^

./lodash.js:14537: WARNING - parameter string does not appear in replace's parameter list
    function replace() {
    ^^^^^^^^^^^^^^^^^^^^

./lodash.js:14565: WARNING - initializing variable
found   : (Function|null)
required: function(string=): string
    var snakeCase = createCompounder(function(result, word, index) {
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:14588: WARNING - optional arguments must be at the end
    function split(string, separator, limit) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:14601: WARNING - assignment
found   : string
required: (number|undefined)
        separator = baseToString(separator);
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:14630: WARNING - initializing variable
found   : (Function|null)
required: function(string=): string
    var startCase = createCompounder(function(result, word, index) {
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:14661: WARNING - Function baseClamp: called with 3 argument(s). Function requires at least 1 argument(s) and no more than 2 argument(s).
        : baseClamp(toInteger(position), 0, string.length);
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:14689: WARNING - Bad type annotation. missing closing ] See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {Object} [options={}] The options object.
                                ^

./lodash.js:14698: WARNING - Bad type annotation. missing closing ] See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {string} [options.sourceURL='lodash.templateSources[n]']
                                                                 ^

./lodash.js:14771: WARNING - optional arguments must be at the end
    function template(string, options, guard) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:14876: WARNING - inconsistent return type
found   : *
required: (Function|null)
      return result;
             ^^^^^^

./lodash.js:14900: WARNING - parameter string does not appear in toLower's parameter list
    function toLower(value) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:14925: WARNING - parameter string does not appear in toUpper's parameter list
    function toUpper(value) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:14951: WARNING - optional arguments must be at the end
    function trim(string, chars, guard) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:14986: WARNING - optional arguments must be at the end
    function trimEnd(string, chars, guard) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:15019: WARNING - optional arguments must be at the end
    function trimStart(string, chars, guard) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:15043: WARNING - Bad type annotation. missing closing ] See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {Object} [options={}] The options object.
                                ^

./lodash.js:15070: WARNING - optional arguments must be at the end
    function truncate(string, options) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:15075: WARNING - Variable referenced before declaration: separator
        var separator = 'separator' in options ? options.separator : separator;
                                                                     ^^^^^^^^^

./lodash.js:15172: WARNING - initializing variable
found   : (Function|null)
required: function(string=): string
    var upperCase = createCompounder(function(result, word, index) {
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:15193: WARNING - initializing variable
found   : (Function|null)
required: function(string=): string
    var upperFirst = createCaseFirst('toUpperCase');
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:15214: WARNING - optional arguments must be at the end
    function words(string, pattern, guard) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:15234: WARNING - Bad type annotation. Unknown type Function
     * @param {Function} func The function to attempt.
               ^

./lodash.js:15248: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), ...*): *
    var attempt = baseRest(function(func, args) {
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:15266: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} object The object to bind and assign the bound methods to.
               ^

./lodash.js:15267: WARNING - Bad type annotation. missing closing ) See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {...(string|string[])} methodNames The object method names to bind.
                                ^

./lodash.js:15268: WARNING - Bad type annotation. Unknown type Object
     * @returns {Object} Returns `object`.
                 ^

./lodash.js:15282: WARNING - initializing variable
found   : (Function|null)
required: function((?|null)): (?|null)
    var bindAll = flatRest(function(object, methodNames) {
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:15283: WARNING - Function arrayEach: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
      arrayEach(methodNames, function(key) {
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:15285: WARNING - actual parameter 2 of baseAssignValue does not match formal parameter
found   : (string|symbol)
required: string
        baseAssignValue(object, key, bind(object[key], object));
                                ^^^

./lodash.js:15323: WARNING - Function arrayMap: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
      pairs = !length ? [] : arrayMap(pairs, function(pair) {
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:15366: WARNING - actual parameter 1 of baseConforms does not match formal parameter
found   : *
required: (Object|null)
      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:15366: WARNING - actual parameter 2 of baseClone does not match formal parameter
found   : number
required: boolean
      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
                                            ^^^^^^^^^^^^^^^

./lodash.js:15427: WARNING - Bad type annotation. missing closing ) See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
                                    ^

./lodash.js:15428: WARNING - Bad type annotation. Unknown type Function
     * @returns {Function} Returns the new composite function.
                 ^

./lodash.js:15440: WARNING - initializing variable
found   : (Function|null)
required: function(): (?|null)
    var flow = createFlow();
               ^^^^^^^^^^^^

./lodash.js:15450: WARNING - Bad type annotation. missing closing ) See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
                                    ^

./lodash.js:15451: WARNING - Bad type annotation. Unknown type Function
     * @returns {Function} Returns the new composite function.
                 ^

./lodash.js:15463: WARNING - initializing variable
found   : (Function|null)
required: function(): (?|null)
    var flowRight = createFlow(true);
                    ^^^^^^^^^^^^^^^^

./lodash.js:15528: WARNING - actual parameter 2 of baseClone does not match formal parameter
found   : number
required: boolean
      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
                                                                             ^^^^^^^^^^^^^^^

./lodash.js:15560: WARNING - actual parameter 1 of baseMatches does not match formal parameter
found   : *
required: (Object|null)
      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:15560: WARNING - actual parameter 2 of baseClone does not match formal parameter
found   : number
required: boolean
      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
                                           ^^^^^^^^^^^^^^^

./lodash.js:15590: WARNING - actual parameter 1 of baseMatchesProperty does not match formal parameter
found   : (Array|null|string)
required: string
      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
                                 ^^^^

./lodash.js:15590: WARNING - actual parameter 2 of baseClone does not match formal parameter
found   : number
required: boolean
      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
                                                           ^^^^^^^^^^^^^^^

./lodash.js:15601: WARNING - Bad type annotation. Unknown type Array
     * @param {Array|string} path The path of the method to invoke.
               ^

./lodash.js:15603: WARNING - Bad type annotation. Unknown type Function
     * @returns {Function} Returns the new invoker function.
                 ^

./lodash.js:15617: WARNING - initializing variable
found   : (Function|null)
required: function((?|null|string), ...*): (?|null)
    var method = baseRest(function(path, args) {
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:15632: WARNING - Bad type annotation. Unknown type Object
     * @param {Object} object The object to query.
               ^

./lodash.js:15634: WARNING - Bad type annotation. Unknown type Function
     * @returns {Function} Returns the new invoker function.
                 ^

./lodash.js:15646: WARNING - initializing variable
found   : (Function|null)
required: function((?|null), ...*): (?|null)
    var methodOf = baseRest(function(object, args) {
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:15666: WARNING - Bad type annotation. missing closing ] See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {Object} [options={}] The options object.
                                ^

./lodash.js:15688: WARNING - optional arguments must be at the end
    function mixin(object, source, options) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:15697: WARNING - actual parameter 1 of baseFunctions does not match formal parameter
found   : (Object|null|undefined)
required: (Object|null)
        methodNames = baseFunctions(source, keys(source));
                                    ^^^^^^

./lodash.js:15697: WARNING - actual parameter 1 of keys does not match formal parameter
found   : (Object|null|undefined)
required: (Object|null)
        methodNames = baseFunctions(source, keys(source));
                                                 ^^^^^^

./lodash.js:15702: WARNING - Function arrayEach: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
      arrayEach(methodNames, function(methodName) {
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:15709: WARNING - Object expressions are not callable
              var result = object(this.__wrapped__),
                           ^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:15710: WARNING - Function copyArray: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
                  actions = result.__actions__ = copyArray(this.__actions__);
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:15716: WARNING - actual parameter 2 of arrayPush does not match formal parameter
found   : Arguments
required: (Array|null)
            return func.apply(object, arrayPush([this.value()], arguments));
                                                                ^^^^^^^^^

./lodash.js:15783: WARNING - actual parameter 2 of baseNth does not match formal parameter
found   : (number|undefined)
required: number
        return baseNth(args, n);
                             ^

./lodash.js:15795: WARNING - Bad type annotation. missing closing ) See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
                                    ^

./lodash.js:15797: WARNING - Bad type annotation. Unknown type Function
     * @returns {Function} Returns the new function.
                 ^

./lodash.js:15805: WARNING - initializing variable
found   : (Function|null)
required: function(): (?|null)
    var over = createOver(arrayMap);
               ^^^^^^^^^^^^^^^^^^^^

./lodash.js:15815: WARNING - Bad type annotation. missing closing ) See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {...(Function|Function[])} [predicates=[_.identity]]
                                    ^

./lodash.js:15817: WARNING - Bad type annotation. Unknown type Function
     * @returns {Function} Returns the new function.
                 ^

./lodash.js:15831: WARNING - initializing variable
found   : (Function|null)
required: function(): (?|null)
    var overEvery = createOver(arrayEvery);
                    ^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:15841: WARNING - Bad type annotation. missing closing ) See https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler for more information.
     * @param {...(Function|Function[])} [predicates=[_.identity]]
                                    ^

./lodash.js:15843: WARNING - Bad type annotation. Unknown type Function
     * @returns {Function} Returns the new function.
                 ^

./lodash.js:15857: WARNING - initializing variable
found   : (Function|null)
required: function(): (?|null)
    var overSome = createOver(arraySome);
                   ^^^^^^^^^^^^^^^^^^^^^

./lodash.js:15882: WARNING - actual parameter 1 of baseProperty does not match formal parameter
found   : (string|symbol)
required: string
      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
                                        ^^^^^^^^^^^

./lodash.js:15928: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the range of numbers.
                 ^

./lodash.js:15953: WARNING - optional arguments must be at the end
    var range = createRange();
        ^^^^^^^^^^^^^^^^^^^^^

./lodash.js:15953: WARNING - initializing variable
found   : (Function|null)
required: function(number=, number=): (?|null)
    var range = createRange();
                ^^^^^^^^^^^^^

./lodash.js:15966: WARNING - Bad type annotation. Unknown type Array
     * @returns {Array} Returns the range of numbers.
                 ^

./lodash.js:15991: WARNING - optional arguments must be at the end
    var rangeRight = createRange(true);
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:15991: WARNING - initializing variable
found   : (Function|null)
required: function(number=, number=): (?|null)
    var rangeRight = createRange(true);
                     ^^^^^^^^^^^^^^^^^

./lodash.js:16115: WARNING - Function getIteratee: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      iteratee = getIteratee(iteratee);
                 ^^^^^^^^^^^^^^^^^^^^^

./lodash.js:16144: WARNING - Function arrayMap: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
        return arrayMap(value, toKey);
               ^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:16144: WARNING - actual parameter 1 of arrayMap does not match formal parameter
found   : *
required: (Array|null|undefined)
        return arrayMap(value, toKey);
                        ^^^^^

./lodash.js:16146: WARNING - Function copyArray: called with 1 argument(s). Function requires at least 2 argument(s) and no more than 2 argument(s).
      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:16188: WARNING - initializing variable
found   : (Function|null)
required: function(number, number): number
    var add = createMathOperation(function(augend, addend) {
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:16213: WARNING - initializing variable
found   : (Function|null)
required: function(number, number=): number
    var ceil = createRound('ceil');
               ^^^^^^^^^^^^^^^^^^^

./lodash.js:16230: WARNING - initializing variable
found   : (Function|null)
required: function(number, number): number
    var divide = createMathOperation(function(dividend, divisor) {
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:16255: WARNING - initializing variable
found   : (Function|null)
required: function(number, number=): number
    var floor = createRound('floor');
                ^^^^^^^^^^^^^^^^^^^^

./lodash.js:16306: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)
                              ^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:16352: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      return baseMean(array, getIteratee(iteratee, 2));
                             ^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:16404: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)
                              ^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:16423: WARNING - initializing variable
found   : (Function|null)
required: function(number, number): number
    var multiply = createMathOperation(function(multiplier, multiplicand) {
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:16448: WARNING - initializing variable
found   : (Function|null)
required: function(number, number=): number
    var round = createRound('round');
                ^^^^^^^^^^^^^^^^^^^^

./lodash.js:16465: WARNING - initializing variable
found   : (Function|null)
required: function(number, number): number
    var subtract = createMathOperation(function(minuend, subtrahend) {
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:16514: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
        ? baseSum(array, getIteratee(iteratee, 2))
                         ^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:16529: WARNING - assignment to property bind of lodash
found   : function((?|null), *, ...*): (?|null)
required: function((lodash|null|undefined), *=): function(...?): (Object|null)
    lodash.bind = bind;
    ^^^^^^^^^^^^^^^^^^

./lodash.js:16678: WARNING - Function mixin: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
    mixin(lodash, lodash);
    ^^^^^^^^^^^^^^^^^^^^^

./lodash.js:16822: WARNING - assignment to property toString of lodash
found   : function(*): string
required: function(this:Function): string
    lodash.toString = toString;
    ^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:16838: WARNING - Function mixin: called with 3 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
    mixin(lodash, (function() {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:16860: WARNING - Function arrayEach: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:16865: WARNING - Function arrayEach: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
    arrayEach(['drop', 'take'], function(methodName, index) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:16890: WARNING - Function arrayEach: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:16897: WARNING - Function getIteratee: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
          'iteratee': getIteratee(iteratee, 3),
                      ^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:16906: WARNING - Function arrayEach: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
    arrayEach(['head', 'last'], function(methodName, index) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:16915: WARNING - Function arrayEach: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
    arrayEach(['initial', 'tail'], function(methodName, index) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:16945: WARNING - Function getIteratee: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
      return this.filter(negate(getIteratee(predicate)));
                                ^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:16993: WARNING - actual parameter 2 of arrayPush does not match formal parameter
found   : (Arguments|Array)
required: (Array|null)
          var result = lodashFunc.apply(lodash, arrayPush([value], args));
                                                                   ^^^^

./lodash.js:17010: WARNING - cannot instantiate non-constructor
          return new LodashWrapper(result, chainAll);
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:17021: WARNING - Function arrayEach: called with 2 argument(s). Function requires at least 0 argument(s) and no more than 1 argument(s).
    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./lodash.js:17107: WARNING - The body of an ES6 module cannot reference this.
}.call(this));
       ^^^^

externs.zip//es6.js:1178: WARNING - The type * cannot be templatized
 *     cond(isUnknown(VALUE), unknown(),
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:18: ERROR - @define variable $jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS cannot be reassigned due to code at line 59 of ./6.js.
$jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS = false;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:33: ERROR - @define variable $jscomp.ASSUME_ES5 cannot be reassigned due to code at line 38 of ./6.js.
$jscomp.ASSUME_ES5 = false;
^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:34: ERROR - @define variable $jscomp.ASSUME_NO_NATIVE_MAP cannot be reassigned due to code at line 45 of ./6.js.
$jscomp.ASSUME_NO_NATIVE_MAP = false;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:35: ERROR - @define variable $jscomp.ASSUME_NO_NATIVE_SET cannot be reassigned due to code at line 45 of ./6.js.
$jscomp.ASSUME_NO_NATIVE_SET = false;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

./6.js:36: ERROR - @define variable $jscomp.SIMPLE_FROUND_POLYFILL cannot be reassigned due to code at line 45 of ./6.js.
$jscomp.SIMPLE_FROUND_POLYFILL = false;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

5 error(s), 1518 warning(s), 80.1% typed
